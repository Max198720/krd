const { VK, Keyboard } = require('vk-io');
const botToken = `vk1.a.WRrKnDI3sFHQ4PTUMzN6ZZjW5r746I2oYgPSGXn1TgCS9XaY-o4mbQI2Di-fz5u0erBR4pUvxzEXHiN6ZEvFpMOaJ4DXTuO0zHkjS8uzYeKsqRqI3AxR2rq8IRQxzselcLvurLaDj35DQg7h5nxVJmnW9mpQT9IchpAPJiVxvKe7bhBYy_ZTx4h07vMgts61F79zJR3XLPPuol1TFeBhvg`;
const vk = new VK({
token: botToken,
pollingGroupId: 220472407
})

const users = require(`./users.json`)

const commands = [];


setInterval(async () => {
await saveUsers();
}, 300);

async function saveUsers()
{
require('fs').writeFileSync('./users.json', JSON.stringify(users, null, '\t'));
return true;
}

const utils = {
sp: (int) => {
int = int.toString();
return int.split('').reverse().join('').match(/[0-9]{1,3}/g).join('.').split('').reverse().join('');
},
rn: (int, fixed) => {
if (int === null) return null;
if (int === 0) return '0';
fixed = (!fixed || fixed < 0) ? 0 : fixed;
let b = (int).toPrecision(2).split('e'),
k = b.length === 1 ? 0 : Math.floor(Math.min(b[1].slice(1), 14) / 3),
c = k < 1 ? int.toFixed(0 + fixed) : (int / Math.pow(10, k * 3) ).toFixed(1 + fixed),
d = c < 0 ? c : Math.abs(c),
e = d + ['', '—Ç—ã—Å', '–º–ª–Ω', '–º–ª—Ä–¥', '—Ç—Ä–ª–Ω'][k];

e = e.replace(/e/g, '');
e = e.replace(/\+/g, '');
e = e.replace(/Infinity/g, '–î–æ—Ö–µ—Ä–∞!');

return e;
},
gi: (int) => {
int = int.toString();

let text = ``;
for (let i = 0; i < int.length; i++)
{
text += `${int[i]}‚É£`;
}

return text;
},
decl: (n, titles) => { return titles[(n % 10 === 1 && n % 100 !== 11) ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2] },
random: (x, y) => {
return y ? Math.round(Math.random() * (y - x)) + x : Math.round(Math.random() * x);
},
pick: (array) => {
return array[utils.random(array.length - 1)];
},
repl: (arg) => {
let idk = ''
idk = arg
idk = idk.replace(/(\.|\,)/ig, '');
idk = idk.replace(/(–∫|k)/ig, '000');
idk = idk.replace(/(–º|m)/ig, '000000');
idk = parseInt(idk)
return idk
}
}

const { updates, snippets } = vk;

updates.startPolling();
updates.on('message', async (msg) => {
if(Number(msg.senderId) <= 0) return;
if(msg.isOutbox) return;
const bot = (text, params) => {
return msg.send(`${text}`, params);
}

const user = users.find(x => x.id === msg.senderId)
if(!user)
{
const [user_info] = await vk.api.users.get({
user_ids: msg.senderId,
fields: "sex"
})

users.push({
id: msg.senderId,
first_name: user_info.first_name,
last_name: user_info.last_name,
gender: user_info.sex,
adm: 0,
balance: 0,
rep_balance: 0,
ban: false,
vip: 0
})
}

const command = commands.find(x => x[0].test(msg.text));

msg.user = users.find(x => x.id === msg.senderId);

if(!command && !msg.eventPayload && !msg.isChat) return bot(`–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã. –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã, –ø–∏—à–∏—Ç–µ "–ø–æ–º–æ—â—å".`);

if(command){
msg.args = msg.text.match(command[0]);
await command[1](msg, bot);
}

if(msg.user.ban) return bot(`–í—ã –∑–∞–±–∞–Ω–µ–Ω—ã!`)
})

const cmd = {
hear: (p, f) => {
commands.push([p, f]);
}
};

cmd.hear(/^(?:–Ω–∞—á–∞—Ç—å)$/i, async (msg, bot) => {
const user = users.find(x => x.id === msg.senderId)
if(!user) return;
bot(`–ó–¥–∞—Ä–æ–≤–∞, ${user.first_name}\n\n–ë–∞–ª–∞–Ω—Å: ${utils.sp(user.balance)}`)
})

cmd.hear(/^(?:–∫–ª–∏–∫)$/i, async (msg, bot) => {
const user = users.find(x => x.id === msg.senderId)
if(!user) return;
if(user.vip === 1) {
user.balance += 2
bot(`–¢—ã —Å–¥–µ–ª–∞–ª –∫–ª–∏–∫ –∏ –ø–æ–ª—É—á–∏–ª +2 –º–æ–Ω–µ—Ç–∫–∏ –∫ –±–∞–ª–∞–Ω—Å—É –∑–∞ —Å—á–µ—Ç VIP!\n –ë–∞–ª–∞–Ω—Å: ${utils.sp(user.balance)}`)
}
else if(user.vip != 1) {
user.balance += 1
bot(`–¢—ã —Å–¥–µ–ª–∞–ª –∫–ª–∏–∫ –∏ –ø–æ–ª—É—á–∏–ª +1 –º–æ–Ω–µ—Ç–∫—É –∫ –±–∞–ª–∞–Ω—Å—É\n –ë–∞–ª–∞–Ω—Å: ${utils.sp(user.balance)}`)
}
});

cmd.hear(/^(?:–±–∞–ª–∞–Ω—Å)$/i, async (msg, bot) => {
const user = users.find(x => x.id === msg.senderId)
if(!user) return;
bot(`–¢–≤–æ–π –±–∞–ª–∞–Ω—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç ${utils.sp(user.balance)} –º–æ–Ω–µ—Ç!`)
})

cmd.hear(/^(?:–ø–æ–º–æ—â—å)$/i, async (msg, bot) => {
const user = users.find(x => x.id === msg.senderId)
if(!user) return;
bot(`–í–æ—Ç –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞: \n üî±–ø–æ–º–æ—â—å \n üî•–∫–ª–∏–∫ \n üé≤–±–∞–ª–∞–Ω—Å \n üë§–∞–∫–∫ \n üéÉ–±–æ—Ç \n üëë–ø–æ–º–æ—â—å –≤–∏–ø \n üéâ—Ä–µ–ø—É—Ç–∞—Ü–∏—è \n ü§ù—Ä–µ–ø—É—Ç–∞—Ü–∏—è –æ–±–º–µ–Ω \n\n
–ß—Ç–æ–±—ã –ø—Ä–µ–æ–±—Ä–µ—Å—Ç–∏ VIP - –ø–∏—à–∏—Ç–µ @firstmember`, {
attachments: "photo675195902_457242435"
})
})

cmd.hear(/^(?:–∞–∫–∫)$/i, async (msg, bot) => {
const user = users.find(x => x.id === msg.senderId)
if(!user) return;
bot(`üìï–¢–≤–æ–π –∏–≥—Ä–æ–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç: \nüîÆ–ò–º—è: ${user.first_name} ${user.last_name}\nüí∞–ë–∞–ª–∞–Ω—Å: ${utils.sp(user.balance)}\nüéâ–†–µ–ø—É—Ç–∞—Ü–∏—è: ${utils.sp(user.rep_balance)} \n üÜîid: ${user.id}`, {
attachments: "photo675195902_457242435"
})
})

cmd.hear(/^(?:–±–æ—Ç)$/i, async (msg, bot) => {
const user = users.find(x => x.id === msg.senderId)
if(!user) return;
bot(`–°–∞–º –±–æ—Çüò°`, {
attachments: "photo675195902_457242435"
})
})

cmd.hear(/^(?:–ø–æ–º–æ—â—å –≤–∏–ø)$/i, async (msg, bot) => {
const user = users.find(x => x.id === msg.senderId)
if(!user) return;
bot(`üëë–° VIP –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –≤ 2 —Ä–∞–∑–∞ –±–æ–ª—å—à–µ –º–æ–Ω–µ—Ç –∑–∞ –∫–ª–∏–∫!üëë\n –ß—Ç–æ–±—ã –∫—É–ø–∏—Ç—å –≤–∏–ø - –ø–∏—à–∏—Ç–µ @firstmember`, {
attachments: "photo675195902_457242435"
})
})

cmd.hear(/^(?:—Ä–µ–ø—É—Ç–∞—Ü–∏—è)$/i, async (msg, bot) => {
const user = users.find(x => x.id === msg.senderId)
if(!user) return;
bot(`–í—ã –º–æ–∂–µ—Ç–µ –æ–±–º–µ–Ω—è—Ç—å –º–æ–Ω–µ—Ç–∫–∏ –Ω–∞ —Ä–µ–ø—É—Ç–∞—Ü–∏—é, —á—Ç–æ–±—ã —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å, –Ω–∞–ø–∏—à–∏—Ç–µ: \n–†–µ–ø—É—Ç–∞—Ü–∏—è –æ–±–º–µ–Ω`, {
attachments: "photo675195902_457242435"
})
})

cmd.hear(/^(?:—Ä–µ–ø—É—Ç–∞—Ü–∏—è –æ–±–º–µ–Ω)$/i, async (msg, bot) => {
const user = users.find(x => x.id === msg.senderId)
if(!user) return;
if(user.balance >= 100) {
user.balance -= 100
user.rep_balance += 1
bot(`–í—ã —É—Å–ø–µ—à–Ω–æ –æ–±–º–µ–Ω—è–ª–∏ 100 –º–æ–Ω–µ—Ç –Ω–∞ 1 —Ä–µ–ø—É—Ç–∞—Ü–∏—é`)
}
else if(user.balance < 100) {
bot(`–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –º–æ–Ω–µ—Ç –¥–ª—è –æ–±–º–µ–Ω–∞, –≤—ã –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å –∏—Ö —É @firstmember`)
}
})
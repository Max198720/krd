const { VK, Keyboard } = require('vk-io');
const userToken = `vk1.a.IgfwEgOxsJNUU-FBKdJhVttyPXRUV8VKwFkCr0wmhUc865oX9Mg5DhtFmeLGa9NY4r03w2Cfw5E87tpYsG12qzrmbexqTnQuBIv3NEUNmW37pDjrZSuP92Hwt9koznSSS72OxEd67ka1i7YZWKjRwVztMEpochDhViH5Op8JKEDm511G9N6c8oAmWavLEJjBoWGhQU_gNAn2ueJiCKig9Q`;
const botToken = `vk1.a.63KdXKGpYvuLEAX7ZJEdPhNVSupgKyoizFM-CTC02-aa0kXttZ4gOJlyjtltdZXYJRr9tmb_YwOEPLIBh6MaOSq-mc67wU_cJs5PLLk36A0sQ4-hZDleQE-wvJY5fnDOdJrAeCCnqWeiK8hTvhVzRzcFeG0xgzZoolcuUiTz6y6hqmckS5LoCFz1A7Qnb3MuG-I6AwPtXHwCSe0n_xC_JQ`;
const vk = new VK({
    token: botToken,
    pollingGroupId: 218252023
});
const commands = [];
let usera = new VK({
    token: userToken
});

const Canvas = require('canvas')
const canvas = Canvas.createCanvas(1920, 768)
const ctx = canvas.getContext('2d')
const fs = require('fs')

const Image = Canvas.Image
const img = new Image()
img.src = 'popa.png'

ctx.font = '122pt WILD WORLD'

ctx.textBaseline = "middle"
ctx.strokeStyle = "black"
ctx.fillStyle = '#440000'
ctx.textAlign = "center"

var http = require('http');

const boss = require(`./boss.json`)

const shop = require(`./shop.json`)

const users = require(`./users.json`)

const clans = require(`./clans.json`);

const promos = require(`./promos.json`)

function getMaxOfArray(nummArray) {
    return Math.max.apply(null, nummArray)
}

function getMinOfArray(nummArray) {
    return Math.min.apply(null, nummArray)
}

const { btoa, kMaxLength } = require('buffer');
const { isArray } = require('util');
const { KeyObject } = require('crypto');

setInterval(async () => {
    await saveUsers();
}, 300);

setInterval(async () => {
    await saveBoss();
}, 300);

setInterval(async () => {
    await saveClans();
}, 300);

setInterval(async () => {
    await savePromos();
}, 300);

async function saveUsers()
{
    require('fs').writeFileSync('./users.json', JSON.stringify(users, null, '\t'));
    return true;
}

async function saveBoss()
{
    require('fs').writeFileSync('./boss.json', JSON.stringify(boss, null, '\t'));
    return true;
}

async function saveClans()
{
    require('fs').writeFileSync('./clans.json', JSON.stringify(clans, null, '\t'));
    return true;
}

async function savePromos()
{
    require('fs').writeFileSync('./promos.json', JSON.stringify(promos, null, '\t'));
    return true;
}

const utils = {
	sp: (int) => {
		int = int.toString();
		return int.split('').reverse().join('').match(/[0-9]{1,3}/g).join('.').split('').reverse().join('');
	},
	rn: (int, fixed) => {
		if (int === null) return null;
		if (int === 0) return '0';
		fixed = (!fixed || fixed < 0) ? 0 : fixed;
		let b = (int).toPrecision(2).split('e'),
			k = b.length === 1 ? 0 : Math.floor(Math.min(b[1].slice(1), 14) / 3),
			c = k < 1 ? int.toFixed(0 + fixed) : (int / Math.pow(10, k * 3) ).toFixed(1 + fixed),
			d = c < 0 ? c : Math.abs(c),
			e = d + ['', '—Ç—ã—Å', '–º–ª–Ω', '–º–ª—Ä–¥', '—Ç—Ä–ª–Ω'][k];

			e = e.replace(/e/g, '');
			e = e.replace(/\+/g, '');
			e = e.replace(/Infinity/g, '–î–æ—Ö–µ—Ä–∞!');

		return e;
	},
	gi: (int) => {
		int = int.toString();

		let text = ``;
		for (let i = 0; i < int.length; i++)
		{
			text += `${int[i]}&#8419;`;
		}

		return text;
	},
	decl: (n, titles) => { return titles[(n % 10 === 1 && n % 100 !== 11) ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2] },
	random: (x, y) => {
		return y ? Math.round(Math.random() * (y - x)) + x : Math.round(Math.random() * x);
	},
	pick: (array) => {
		return array[utils.random(array.length - 1)];
	},
    repl: (arg) => {
        let idk = ''
        idk = arg
        idk = idk.replace(/(\.|\,)/ig, '');
	    idk = idk.replace(/(–∫|k)/ig, '000');
	    idk = idk.replace(/(–º|m)/ig, '000000');
        idk = parseInt(idk)
        return idk
    }
}


let teacherTraining = [`–ì–∏—é –¢–æ–º–∏–æ–∫–∞`, `–°–∞–∫–æ–Ω–¥–∂–∏ –£—Ä–æ–∫–æ–¥–∞–∫–∏`, `–ú–∏—Ü—É—Ä–∏ –ö–∞–Ω—Ä–æ–¥–∂–∏`, `–ö—ë–¥–∂—É—Ä–æ –†–µ–Ω–≥–æ–∫—É`, `–û–±–∞–Ω–∞–π –ò–≥—É—Ä–æ`, `–°–∞–Ω–µ–º–∏ –®–∏–Ω–∞–¥–∑—É–≥–∞–≤–∞`, `–ú—É–∏—á–∏—Ä–æ –¢–æ–∫–∏—Ç–æ`, `–ì—ë–º–µ–π –•–∏–º–µ–¥–∂–∏–º–∞`, `–®–∏–Ω–æ–±—É –ö–æ—á–æ`, `–¢–µ–Ω–≥–µ–Ω –£–∑—É–π`]

function mixarr(arr) {
    return arr.map(i=>[Math.random(), i]).sort().map(i=>i[1])
}

let attachments = [
    {
        attachment: `photo-218252023_457239025`,
        teacher: `–ì–∏—é –¢–æ–º–∏–æ–∫–∞`
    },
    {
        attachment: `photo-218252023_457239026`,
        teacher: `–°–∞–∫–æ–Ω–¥–∂–∏ –£—Ä–æ–∫–æ–¥–∞–∫–∏`
    },
    {
        attachment: `photo-218252023_457239027`,
        teacher: `–ú–∏—Ü—É—Ä–∏ –ö–∞–Ω—Ä–æ–¥–∂–∏`
    },
    {
        attachment: `photo-218252023_457239028`,
        teacher: `–ö—ë–¥–∂—É—Ä–æ –†–µ–Ω–≥–æ–∫—É`
    },
    {
        attachment: `photo-218252023_457239029`,
        teacher: `–û–±–∞–Ω–∞–π –ò–≥—É—Ä–æ`
    },
    {
        attachment: `photo-218252023_457239030`,
        teacher: `–°–∞–Ω–µ–º–∏ –®–∏–Ω–∞–¥–∑—É–≥–∞–≤–∞`
    },
    {
        attachment: `photo-218252023_457239031`,
        teacher: `–ú—É–∏—á–∏—Ä–æ –¢–æ–∫–∏—Ç–æ`
    },
    {
        attachment: `photo-218252023_457239427`,
        teacher: `–ì—ë–º–µ–π –•–∏–º–µ–¥–∂–∏–º–∞`
    },
    {
        attachment: `photo-218252023_457239033`,
        teacher: `–®–∏–Ω–æ–±—É –ö–æ—á–æ`
    },
    {
        attachment: `photo-218252023_457239034`,
        teacher: `–¢–µ–Ω–≥–µ–Ω –£–∑—É–π`
    }
]

const { updates, snippets } = vk;

updates.startPolling();
updates.on('message', async (msg) => {
    let refValue = null;
    if(Number(msg.senderId) <= 0) return;
    if(msg.isOutbox) return;
    const bot = (text, params) => {
        return msg.send(`${text}`, params);
    }

    if(msg.referralValue)
    {
        if(atob(msg.referralValue).indexOf('cid') !== -1)
        {
            refValue = atob(msg.referralValue)
            refValue = refValue.replace('cid', '')
        }
    }
    else {
        refValue = null
    }
    
    if(/\[club218252023\|(.*)\]/i.test(msg.text)) msg.text = msg.text.replace(/\[club218252023\|(.*)\]/ig, '').trim();
    if(!users.find(x => x.id === msg.senderId))
    {
        const [user_info] = await vk.api.users.get({ user_id: msg.senderId });
        const date = new Date();
        users.push({
            uid: users.length,
            id: msg.senderId,
            weapon: null,
            teacher: null,
            nickname: `${user_info.first_name} ${user_info.last_name}`,
            money: 0,
            timers: {
                bonus: 0,
                training: 0,
                boss: 0,
                cboss: 0
            },
            lvl: 1,
            exp: 0,
            nextExp: 100,
            needCall: null,
            strenght: 0,
            ban_info: {
                ban: false,
                reason: "",
                adm: null
            },
            boss_damage: 0,
            clan: null,
            adm: false,
            weapon: null,
            vip: false
        });
        if(!msg.isChat) {
            return bot(`–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –≤—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –≤ –±–æ—Ç–µ!‚úÖ
            –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ–±–µ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞ –∏ –ø—Ä–æ–¥–≤–∏–Ω—å—Ç–µ –µ–≥–æ –≤ —Ç–æ–ø–µ!üîç
            –ó–∞ –∫–∞–∂–¥—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É —Å –≤–∞—à–∏–º –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–º, –µ–º—É –ø—Ä–∏–±–∞–≤–ª—è—é—Ç—Å—è –±–∞–ª–ª—ã.‚ûï
            –ö–∞–∂–¥—ã–π –º–µ—Å—è—Ü –±–∞–ª–ª—ã –±—É–¥—É—Ç –æ–±–Ω—É–ª—è—Ç—å—Å—è –∏ –∫–∞–∂–¥–æ–º—É —É—á–µ–Ω–∏–∫—É –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞, –Ω–∞—Ö–æ–¥—è—â–µ–≥–æ—Å—è –≤ —Ç–æ–ø–µ —Å 1-3 –º–µ—Å—Ç–∞, –±—É–¥—É—Ç –¥–∞–≤–∞—Ç—å –Ω–µ–∫–∏–π –±–æ–Ω—É—ÅüôÇ`, {
                keyboard: Keyboard.keyboard([
                    [
                        Keyboard.callbackButton({
                            label: '–ì–∏—é –¢–æ–º–∏–æ–∫–∞',
                            payload: {
                                command: "confirm",
                                commandYes: "setTeacherY",
                                commandNo: "backTeacher",
                                name: `–ì–∏—é –¢–æ–º–∏–æ–∫–∞`,
                                text: `–í—ã –≤—ã–±—Ä–∞–ª–∏ - [hz].\n–í—ã —É–≤–µ—Ä–µ–Ω—ã?`,
                                attachment: `photo-218252023_457239025`,
                                ref_value: refValue
                            }
                        }),
                        Keyboard.callbackButton({
                            label: '–°–∞–∫–æ–Ω–¥–∂–∏ –£—Ä–æ–∫–æ–¥–∞–∫–∏',
                            payload: {
                                command: "confirm",
                                commandYes: "setTeacherY",
                                commandNo: "backTeacher",
                                name: `–°–∞–∫–æ–Ω–¥–∂–∏ –£—Ä–æ–∫–æ–¥–∞–∫–∏`,
                                text: `–í—ã –≤—ã–±—Ä–∞–ª–∏ - [hz].\n–í—ã —É–≤–µ—Ä–µ–Ω—ã?`,
                                attachment: `photo-218252023_457239026`,
                                ref_value: refValue
                            }
                        }),
                    ],
                    [
                        Keyboard.callbackButton({
                            label: '–ú–∏—Ü—É—Ä–∏ –ö–∞–Ω—Ä–æ–¥–∂–∏',
                            payload: {
                                command: "confirm",
                                commandYes: "setTeacherY",
                                commandNo: "backTeacher",
                                name: `–ú–∏—Ü—É—Ä–∏ –ö–∞–Ω—Ä–æ–¥–∂–∏`,
                                text: `–í—ã –≤—ã–±—Ä–∞–ª–∏ - [hz].\n–í—ã —É–≤–µ—Ä–µ–Ω—ã?`,
                                attachment: `photo-218252023_457239027`,
                                ref_value: refValue
                            }
                        }),
                        Keyboard.callbackButton({
                            label: '–ö—ë–¥–∂—É—Ä–æ –†–µ–Ω–≥–æ–∫—É',
                            payload: {
                                command: "confirm",
                                commandYes: "setTeacherY",
                                commandNo: "backTeacher",
                                name: `–ö—ë–¥–∂—É—Ä–æ –†–µ–Ω–≥–æ–∫—É`,
                                text: `–í—ã –≤—ã–±—Ä–∞–ª–∏ - [hz].\n–í—ã —É–≤–µ—Ä–µ–Ω—ã?`,
                                attachment: `photo-218252023_457239028`,
                                ref_value: refValue
                            }
                        })
                    ],
                    [
                        Keyboard.callbackButton({
                            label: "–û–±–∞–Ω–∞–π –ò–≥—É—Ä–æ",
                            payload: {
                                command: "confirm",
                                commandYes: "setTeacherY",
                                commandNo: "backTeacher",
                                name: `–û–±–∞–Ω–∞–π –ò–≥—É—Ä–æ`,
                                text: `–í—ã –≤—ã–±—Ä–∞–ª–∏ - [hz].\n–í—ã —É–≤–µ—Ä–µ–Ω—ã?`,
                                attachment: `photo-218252023_457239029`,
                                ref_value: refValue
                            }
                        }),
                        Keyboard.callbackButton({
                            label: "–°–∞–Ω–µ–º–∏ –®–∏–Ω–∞–¥–∑—É–≥–∞–≤–∞",
                            payload: {
                                command: 'confirm',
                                commandYes: "setTeacherY",
                                commandNo: "backTeacher",
                                name: `–°–∞–Ω–µ–º–∏ –®–∏–Ω–∞–¥–∑—É–≥–∞–≤–∞`,
                                text: `–í—ã –≤—ã–±—Ä–∞–ª–∏ - [hz].\n–í—ã —É–≤–µ—Ä–µ–Ω—ã?`,
                                attachment: `photo-218252023_457239030`,
                                ref_value: refValue
                            }
                        })
                    ],
                    [
                        Keyboard.callbackButton({
                            label: "–ú—É–∏—á–∏—Ä–æ –¢–æ–∫–∏—Ç–æ",
                            payload: {
                                command: 'confirm',
                                commandYes: "setTeacherY",
                                commandNo: "backTeacher",
                                name: `–ú—É–∏—á–∏—Ä–æ –¢–æ–∫–∏—Ç–æ`,
                                text: `–í—ã –≤—ã–±—Ä–∞–ª–∏ - [hz].\n–í—ã —É–≤–µ—Ä–µ–Ω—ã?`,
                                attachment: `photo-218252023_457239031`,
                                ref_value: refValue
                            }
                        }),
                        Keyboard.callbackButton({
                            label: "–ì—ë–º–µ–π –•–∏–º–µ–¥–∂–∏–º–∞",
                            payload: {
                                command: 'confirm',
                                commandYes: "setTeacherY",
                                commandNo: "backTeacher",
                                name: `–ì—ë–º–µ–π –•–∏–º–µ–¥–∂–∏–º–∞`,
                                text: `–í—ã –≤—ã–±—Ä–∞–ª–∏ - [hz].\n–í—ã —É–≤–µ—Ä–µ–Ω—ã?`,
                                attachment: `photo-218252023_457239427`,
                                ref_value: refValue
                            }
                        })
                    ],
                    [
                        Keyboard.callbackButton({
                            label: "–®–∏–Ω–æ–±—É –ö–æ—á–æ",
                            payload: {
                                command: 'confirm',
                                commandYes: "setTeacherY",
                                commandNo: "backTeacher",
                                name: `–®–∏–Ω–æ–±—É –ö–æ—á–æ`,
                                text: `–í—ã –≤—ã–±—Ä–∞–ª–∏ - [hz].\n–í—ã —É–≤–µ—Ä–µ–Ω—ã?`,
                                attachment: `photo-218252023_457239033`,
                                ref_value: refValue
                            }
                        }),
                        Keyboard.callbackButton({
                            label: "–¢–µ–Ω–≥–µ–Ω –£–∑—É–π",
                            payload: {
                                command: 'confirm',
                                commandYes: "setTeacherY",
                                commandNo: "backTeacher",
                                name: `–¢–µ–Ω–≥–µ–Ω –£–∑—É–π`,
                                text: `–í—ã –≤—ã–±—Ä–∞–ª–∏ - [hz].\n–í—ã —É–≤–µ—Ä–µ–Ω—ã?`,
                                attachment: `photo-218252023_457239034`,
                                ref_value: refValue
                            }
                        })
                    ]
                ]).inline()
            })
        }
    }

    const command = commands.find(x => x[0].test(msg.text));

    msg.user = users.find(x => x.id === msg.senderId);

    if(msg.user.ban_info.ban === true && msg.isChat) {
        return
    }

    if(msg.user.ban_info.ban === true && !msg.isChat) {
        let adm = users.find(x => x.id === msg.user.ban_info.adm)
        return bot(`üö´–í—ã –±—ã–ª–∏ –∑–∞–±–∞–Ω–µ–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º [id${adm.id}|${adm.nickname}]üö´\n–ü—Ä–∏—á–∏–Ω–∞: ${msg.user.ban_info.reason}`)
    }

    if(!msg.user.teacher && !msg.isChat) return bot(`–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞!`, {keyboard: Keyboard.keyboard([
        [
            Keyboard.callbackButton({
                label: '–ì–∏—é –¢–æ–º–∏–æ–∫–∞',
                payload: {
                    command: "confirm",
                    commandYes: "setTeacherY",
                    commandNo: "backTeacher",
                    name: `–ì–∏—é –¢–æ–º–∏–æ–∫–∞`,
                    text: `–í—ã –≤—ã–±—Ä–∞–ª–∏ - [hz].\n–í—ã —É–≤–µ—Ä–µ–Ω—ã?`,
                    attachment: `photo-218252023_457239025`,
                    ref_value: refValue
                }
            }),
            Keyboard.callbackButton({
                label: '–°–∞–∫–æ–Ω–¥–∂–∏ –£—Ä–æ–∫–æ–¥–∞–∫–∏',
                payload: {
                    command: "confirm",
                    commandYes: "setTeacherY",
                    commandNo: "backTeacher",
                    name: `–°–∞–∫–æ–Ω–¥–∂–∏ –£—Ä–æ–∫–æ–¥–∞–∫–∏`,
                    text: `–í—ã –≤—ã–±—Ä–∞–ª–∏ - [hz].\n–í—ã —É–≤–µ—Ä–µ–Ω—ã?`,
                    attachment: `photo-218252023_457239026`,
                    ref_value: refValue
                }
            }),
        ],
        [
            Keyboard.callbackButton({
                label: '–ú–∏—Ü—É—Ä–∏ –ö–∞–Ω—Ä–æ–¥–∂–∏',
                payload: {
                    command: "confirm",
                    commandYes: "setTeacherY",
                    commandNo: "backTeacher",
                    name: `–ú–∏—Ü—É—Ä–∏ –ö–∞–Ω—Ä–æ–¥–∂–∏`,
                    text: `–í—ã –≤—ã–±—Ä–∞–ª–∏ - [hz].\n–í—ã —É–≤–µ—Ä–µ–Ω—ã?`,
                    attachment: `photo-218252023_457239027`,
                    ref_value: refValue
                }
            }),
            Keyboard.callbackButton({
                label: '–ö—ë–¥–∂—É—Ä–æ –†–µ–Ω–≥–æ–∫—É',
                payload: {
                    command: "confirm",
                    commandYes: "setTeacherY",
                    commandNo: "backTeacher",
                    name: `–ö—ë–¥–∂—É—Ä–æ –†–µ–Ω–≥–æ–∫—É`,
                    text: `–í—ã –≤—ã–±—Ä–∞–ª–∏ - [hz].\n–í—ã —É–≤–µ—Ä–µ–Ω—ã?`,
                    attachment: `photo-218252023_457239028`,
                    ref_value: refValue
                }
            })
        ],
        [
            Keyboard.callbackButton({
                label: "–û–±–∞–Ω–∞–π –ò–≥—É—Ä–æ",
                payload: {
                    command: "confirm",
                    commandYes: "setTeacherY",
                    commandNo: "backTeacher",
                    name: `–û–±–∞–Ω–∞–π –ò–≥—É—Ä–æ`,
                    text: `–í—ã –≤—ã–±—Ä–∞–ª–∏ - [hz].\n–í—ã —É–≤–µ—Ä–µ–Ω—ã?`,
                    attachment: `photo-218252023_457239029`,
                    ref_value: refValue
                }
            }),
            Keyboard.callbackButton({
                label: "–°–∞–Ω–µ–º–∏ –®–∏–Ω–∞–¥–∑—É–≥–∞–≤–∞",
                payload: {
                    command: 'confirm',
                    commandYes: "setTeacherY",
                    commandNo: "backTeacher",
                    name: `–°–∞–Ω–µ–º–∏ –®–∏–Ω–∞–¥–∑—É–≥–∞–≤–∞`,
                    text: `–í—ã –≤—ã–±—Ä–∞–ª–∏ - [hz].\n–í—ã —É–≤–µ—Ä–µ–Ω—ã?`,
                    attachment: `photo-218252023_457239030`,
                    ref_value: refValue
                }
            })
        ],
        [
            Keyboard.callbackButton({
                label: "–ú—É–∏—á–∏—Ä–æ –¢–æ–∫–∏—Ç–æ",
                payload: {
                    command: 'confirm',
                    commandYes: "setTeacherY",
                    commandNo: "backTeacher",
                    name: `–ú—É–∏—á–∏—Ä–æ –¢–æ–∫–∏—Ç–æ`,
                    text: `–í—ã –≤—ã–±—Ä–∞–ª–∏ - [hz].\n–í—ã —É–≤–µ—Ä–µ–Ω—ã?`,
                    attachment: `photo-218252023_457239031`,
                    ref_value: refValue
                }
            }),
            Keyboard.callbackButton({
                label: "–ì—ë–º–µ–π –•–∏–º–µ–¥–∂–∏–º–∞",
                payload: {
                    command: 'confirm',
                    commandYes: "setTeacherY",
                    commandNo: "backTeacher",
                    name: `–ì—ë–º–µ–π –•–∏–º–µ–¥–∂–∏–º–∞`,
                    text: `–í—ã –≤—ã–±—Ä–∞–ª–∏ - [hz].\n–í—ã —É–≤–µ—Ä–µ–Ω—ã?`,
                    attachment: `photo-218252023_457239427`,
                    ref_value: refValue
                }
            })
        ],
        [
            Keyboard.callbackButton({
                label: "–®–∏–Ω–æ–±—É –ö–æ—á–æ",
                payload: {
                    command: 'confirm',
                    commandYes: "setTeacherY",
                    commandNo: "backTeacher",
                    name: `–®–∏–Ω–æ–±—É –ö–æ—á–æ`,
                    text: `–í—ã –≤—ã–±—Ä–∞–ª–∏ - [hz].\n–í—ã —É–≤–µ—Ä–µ–Ω—ã?`,
                    attachment: `photo-218252023_457239033`,
                    ref_value: refValue
                }
            }),
            Keyboard.callbackButton({
                label: "–¢–µ–Ω–≥–µ–Ω –£–∑—É–π",
                payload: {
                    command: 'confirm',
                    commandYes: "setTeacherY",
                    commandNo: "backTeacher",
                    name: `–¢–µ–Ω–≥–µ–Ω –£–∑—É–π`,
                    text: `–í—ã –≤—ã–±—Ä–∞–ª–∏ - [hz].\n–í—ã —É–≤–µ—Ä–µ–Ω—ã?`,
                    attachment: `photo-218252023_457239034`,
                    ref_value: refValue
                }
            })
        ]
    ]).inline()});

    if(!msg.user.teacher && command && msg.isChat) {
        bot(`–î–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –∏–≥—Ä—ã –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –õ–° —Å –±–æ—Ç–æ–º.`)
        return vk.api.messages.send({
            user_id: msg.senderId,
            peer_id: msg.senderId,
            random_id: 0,
            message: `–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞!`,
            keyboard: Keyboard.keyboard([
                [
                    Keyboard.callbackButton({
                        label: '–ì–∏—é –¢–æ–º–∏–æ–∫–∞',
                        payload: {
                            command: "confirm",
                            commandYes: "setTeacherY",
                            commandNo: "backTeacher",
                            name: `–ì–∏—é –¢–æ–º–∏–æ–∫–∞`,
                            text: `–í—ã –≤—ã–±—Ä–∞–ª–∏ - [hz].\n–í—ã —É–≤–µ—Ä–µ–Ω—ã?`,
                            attachment: `photo-218252023_457239025`,
                            ref_value: refValue
                        }
                    }),
                    Keyboard.callbackButton({
                        label: '–°–∞–∫–æ–Ω–¥–∂–∏ –£—Ä–æ–∫–æ–¥–∞–∫–∏',
                        payload: {
                            command: "confirm",
                            commandYes: "setTeacherY",
                            commandNo: "backTeacher",
                            name: `–°–∞–∫–æ–Ω–¥–∂–∏ –£—Ä–æ–∫–æ–¥–∞–∫–∏`,
                            text: `–í—ã –≤—ã–±—Ä–∞–ª–∏ - [hz].\n–í—ã —É–≤–µ—Ä–µ–Ω—ã?`,
                            attachment: `photo-218252023_457239026`,
                            ref_value: refValue
                        }
                    }),
                ],
                [
                    Keyboard.callbackButton({
                        label: '–ú–∏—Ü—É—Ä–∏ –ö–∞–Ω—Ä–æ–¥–∂–∏',
                        payload: {
                            command: "confirm",
                            commandYes: "setTeacherY",
                            commandNo: "backTeacher",
                            name: `–ú–∏—Ü—É—Ä–∏ –ö–∞–Ω—Ä–æ–¥–∂–∏`,
                            text: `–í—ã –≤—ã–±—Ä–∞–ª–∏ - [hz].\n–í—ã —É–≤–µ—Ä–µ–Ω—ã?`,
                            attachment: `photo-218252023_457239027`,
                            ref_value: refValue
                        }
                    }),
                    Keyboard.callbackButton({
                        label: '–ö—ë–¥–∂—É—Ä–æ –†–µ–Ω–≥–æ–∫—É',
                        payload: {
                            command: "confirm",
                            commandYes: "setTeacherY",
                            commandNo: "backTeacher",
                            name: `–ö—ë–¥–∂—É—Ä–æ –†–µ–Ω–≥–æ–∫—É`,
                            text: `–í—ã –≤—ã–±—Ä–∞–ª–∏ - [hz].\n–í—ã —É–≤–µ—Ä–µ–Ω—ã?`,
                            attachment: `photo-218252023_457239028`,
                            ref_value: refValue
                        }
                    })
                ],
                [
                    Keyboard.callbackButton({
                        label: "–û–±–∞–Ω–∞–π –ò–≥—É—Ä–æ",
                        payload: {
                            command: "confirm",
                            commandYes: "setTeacherY",
                            commandNo: "backTeacher",
                            name: `–û–±–∞–Ω–∞–π –ò–≥—É—Ä–æ`,
                            text: `–í—ã –≤—ã–±—Ä–∞–ª–∏ - [hz].\n–í—ã —É–≤–µ—Ä–µ–Ω—ã?`,
                            attachment: `photo-218252023_457239029`,
                            ref_value: refValue
                        }
                    }),
                    Keyboard.callbackButton({
                        label: "–°–∞–Ω–µ–º–∏ –®–∏–Ω–∞–¥–∑—É–≥–∞–≤–∞",
                        payload: {
                            command: 'confirm',
                            commandYes: "setTeacherY",
                            commandNo: "backTeacher",
                            name: `–°–∞–Ω–µ–º–∏ –®–∏–Ω–∞–¥–∑—É–≥–∞–≤–∞`,
                            text: `–í—ã –≤—ã–±—Ä–∞–ª–∏ - [hz].\n–í—ã —É–≤–µ—Ä–µ–Ω—ã?`,
                            attachment: `photo-218252023_457239030`,
                            ref_value: refValue
                        }
                    })
                ],
                [
                    Keyboard.callbackButton({
                        label: "–ú—É–∏—á–∏—Ä–æ –¢–æ–∫–∏—Ç–æ",
                        payload: {
                            command: 'confirm',
                            commandYes: "setTeacherY",
                            commandNo: "backTeacher",
                            name: `–ú—É–∏—á–∏—Ä–æ –¢–æ–∫–∏—Ç–æ`,
                            text: `–í—ã –≤—ã–±—Ä–∞–ª–∏ - [hz].\n–í—ã —É–≤–µ—Ä–µ–Ω—ã?`,
                            attachment: `photo-218252023_457239031`,
                            ref_value: refValue
                        }
                    }),
                    Keyboard.callbackButton({
                        label: "–ì—ë–º–µ–π –•–∏–º–µ–¥–∂–∏–º–∞",
                        payload: {
                            command: 'confirm',
                            commandYes: "setTeacherY",
                            commandNo: "backTeacher",
                            name: `–ì—ë–º–µ–π –•–∏–º–µ–¥–∂–∏–º–∞`,
                            text: `–í—ã –≤—ã–±—Ä–∞–ª–∏ - [hz].\n–í—ã —É–≤–µ—Ä–µ–Ω—ã?`,
                            attachment: `photo-218252023_457239427`,
                            ref_value: refValue
                        }
                    })
                ],
                [
                    Keyboard.callbackButton({
                        label: "–®–∏–Ω–æ–±—É –ö–æ—á–æ",
                        payload: {
                            command: 'confirm',
                            commandYes: "setTeacherY",
                            commandNo: "backTeacher",
                            name: `–®–∏–Ω–æ–±—É –ö–æ—á–æ`,
                            text: `–í—ã –≤—ã–±—Ä–∞–ª–∏ - [hz].\n–í—ã —É–≤–µ—Ä–µ–Ω—ã?`,
                            attachment: `photo-218252023_457239033`,
                            ref_value: refValue
                        }
                    }),
                    Keyboard.callbackButton({
                        label: "–¢–µ–Ω–≥–µ–Ω –£–∑—É–π",
                        payload: {
                            command: 'confirm',
                            commandYes: "setTeacherY",
                            commandNo: "backTeacher",
                            name: `–¢–µ–Ω–≥–µ–Ω –£–∑—É–π`,
                            text: `–í—ã –≤—ã–±—Ä–∞–ª–∏ - [hz].\n–í—ã —É–≤–µ—Ä–µ–Ω—ã?`,
                            attachment: `photo-218252023_457239034`,
                            ref_value: refValue
                        }
                    })
                ]
            ]).inline()
        })
    }

    if(msg.referralValue)
    {
        if(atob(msg.referralValue).indexOf('cid') !== -1)
        {
            refValue = atob(msg.referralValue)
            refValue = refValue.replace('cid', '')
    
            if(msg.user.clan === null) {
                let clan = clans.find(x => x.cid === Number(refValue))
                if(clan.delete === true || !clan) return bot(`–ö–ª–∞–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –±—ã–ª —Ä–∞—Å–ø—É—â–µ–Ω!`)
                msg.user.clan = clan.cid
                clan.members.push(msg.user.uid)
    
                return bot(`–í—ã –ø–µ—Ä–µ—à–ª–∏ –ø–æ —Å—Å—ã–ª–∫–µ, –∫–æ—Ç–æ—Ä–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –≤–∞—Å –≤ –∫–ª–∞–Ω. –¢–µ–ø–µ—Ä—å –≤—ã —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞–Ω–µ ${clan.name}`, {
                    attachment: clan.icon
                })
            }
        }
    }

    
    if(!command && !msg.eventPayload && !msg.isChat) return bot(`–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã. –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã, –ø–∏—à–∏—Ç–µ "–ø–æ–º–æ—â—å".`);

    if(command){
        msg.args = msg.text.match(command[0]);
        await command[1](msg, bot);
    }
});
updates.on('message_event', async (context, bot) => {
    if(!context.eventPayload) return;
    context.user = users.find(x => x.id === context.userId)
    let text1;
    let text;
    let messageId = await vk.api.messages.getByConversationMessageId({
        peer_id: context.peerId,
        conversation_message_ids: context.conversationMessageId
    });
    if(context.eventPayload.command === 'confirm')
    {
        let refValue;
        text1 = context.eventPayload.name;
        text = context.eventPayload.text.replace(/\[hz\]/ig, `${text1}`)
        if(context.eventPayload.ref_value !== null)
        {
            refValue = context.eventPayload.ref_value
        }
        else {
            refValue = null
        }

        if(!context.eventPayload.clan) await vk.api.messages.edit({
            "peer_id": context.peerId,
            "conversation_message_id": messageId['items'][0].conversation_message_id,
            "message": `${text}`,
            "attachment": `${context.eventPayload.attachment}`,
            "keyboard": Keyboard.keyboard([
                [
                    Keyboard.callbackButton({
                        label: "–î–∞",
                        payload: {
                            command: `${context.eventPayload.commandYes}`,
                            value: `${context.eventPayload.name}`,
                            attachment: `${context.eventPayload.attachment}`,
                            ref_value: refValue
                        },
                        color: Keyboard.POSITIVE_COLOR
                    }),

                    Keyboard.callbackButton({
                        label: "–ù–∞–∑–∞–¥",
                        payload: {
                            command: `${context.eventPayload.commandNo}`
                        },
                        color: Keyboard.NEGATIVE_COLOR
                    })
                ]
            ]).inline()
        })
        else {
            await vk.api.messages.edit({
                "peer_id": context.peerId,
                "conversation_message_id": messageId['items'][0].conversation_message_id,
                "message": `${text}`,
                "attachment": `${context.eventPayload.attachment}`,
                "keyboard": Keyboard.keyboard([
                    [
                        Keyboard.callbackButton({
                            label: "–î–∞",
                            payload: {
                                command: `${context.eventPayload.commandYes}`,
                                value: `${context.eventPayload.name}`,
                                attachment: `${context.eventPayload.attachment}`,
                                ref_value: refValue,
                                clan: context.eventPayload.clan
                            },
                            color: Keyboard.POSITIVE_COLOR
                        }),
    
                        Keyboard.callbackButton({
                            label: "–ù–∞–∑–∞–¥",
                            payload: {
                                command: `${context.eventPayload.commandNo}`,
                                clan: context.eventPayload.clan
                            },
                            color: Keyboard.NEGATIVE_COLOR
                        })
                    ]
                ]).inline()
            })
        }
    }
    else if(context.eventPayload.command === `setTeacherY`)
    {
        text1 = context.eventPayload.value;
        context.user.teacher = `${text1}`
        vk.api.messages.edit({
            "peer_id": context.peerId,
            "conversation_message_id": messageId['items'][0].conversation_message_id,
            "attachment": `${context.eventPayload.attachment}`,
            "message": `–£—Å–ø–µ—à–Ω–æ! –í–∞—à –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫ - ${text1}. –ù–µ —Ä–∞–∑–æ—á–∞—Ä—É–π—Ç–µ –µ–≥–æ. –î–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –∏–≥—Ä—ã —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–ø–∏—Å–∞—Ç—å "–ü–æ–º–æ—â—å"`
        })
        if(context.eventPayload.ref_value !== null)
        {
            let clan = clans.find(x => x.cid === Number(context.eventPayload.ref_value))
            clan.members.push(context.user.uid)
            context.user.clan = clan.cid

            vk.api.messages.send({
                "peer_id": context.peerId,
                "user_id": context.userId,
                "attachment": clan.icon,
                "message": `–í—ã –ø–µ—Ä–µ—à–ª–∏ –ø–æ —Å—Å—ã–ª–∫–µ, –∫–æ—Ç–æ—Ä–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –≤–∞—Å –≤ –∫–ª–∞–Ω. –¢–µ–ø–µ—Ä—å –≤—ã —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞–Ω–µ ${clan.name}`,
                "random_id": 0
            })
        }
        return
    }
    else if(context.eventPayload.command === `backTeacher`)
    {
        return vk.api.messages.edit({
            "peer_id": context.peerId,
            "conversation_message_id": messageId['items'][0].conversation_message_id,
            "message": `–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞!`,
            "keyboard": kbTeachers
        })
    }
    else if(context.eventPayload.command === `confirmInvite`)
    {
        let clan = clans.find(x => x.cid === context.eventPayload.clan)
        context.user.clan = clan.cid

        clan.members.push(context.user.uid)
        return vk.api.messages.edit({
            "peer_id": context.peerId,
            "conversation_message_id": messageId['items'][0].conversation_message_id,
            "message": `–í—ã —É—Å–ø–µ—à–Ω–æ –≤—Å—Ç—É–ø–∏–ª–∏ –≤ –∫–ª–∞–Ω ${clan.name}`,
            "attachment": clan.icon
        })

    }
    else if(context.eventPayload.command === `denyInvite`)
    {
        let clan = clans.find(x => x.cid === context.eventPayload.clan)
        return vk.api.messages.edit({
            "peer_id": context.peerId,
            "conversation_message_id": messageId['items'][0].conversation_message_id,
            "message": `–í—ã –æ—Ç–∫–ª–æ–Ω–∏–ª–∏ –∑–∞—è–≤–∫—É –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –∫–ª–∞–Ω ${clan.name}`
        })
    }
    else if(context.eventPayload.command === `train`)
    {
        if(context.user.id !== context.eventPayload.user) return;
        if(context.user.timers.training > getUnix()) return vk.api.messages.send({
            user_id: context.userId,
            peer_id: context.peerId,
            message: `–î–ª—è —Å–ª–µ–¥—É—é—â–µ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –ø–æ–¥–æ–∂–¥–∏—Ç–µ ${unixStampLeft(context.user.timers.training - Date.now())}`
        })

        if(context.eventPayload.isChat) {
            context.user.timers.training = getUnix() + 60000
        }
        else {
            context.user.timers.training = getUnix() + 10000
        }

        if(context.eventPayload.teacher === context.user.needCall)
        {
            let random_strenght = utils.random(1, 50)
            if(context.user.vip === false) {
                context.user.strenght += random_strenght
                context.user.exp += 1
            }
            else if(context.user.vip === '–î–µ–π—Å—Ç–≤—É–µ—Ç') {
                context.user.strenght += (random_strenght + 25)
                context.user.exp += 2
            }
            
            if(context.user.exp >= context.user.nextExp) {
                context.user.lvl += 1;
                context.user.exp = 0
                context.user.nextExp += 50
            }
            if(context.user.vip === false) {
                if(context.eventPayload.isChat) {
                    return vk.api.messages.edit({
                        "attachment": attachments.find(x => x.teacher === `${context.eventPayload.teacher}`)['attachment'],
                        "peer_id": context.peerId,
                        "conversation_message_id": messageId['items'][0].conversation_message_id,
                        "message": `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É!üî•\n–í—ã –ø–æ–ª—É—á–∏–ª–∏:\n\n‚Ä¢${random_strenght} –æ—á–∫–æ–≤ –≤–ª–∞–¥–µ–Ω–∏—è –∫–ª–∏–Ω–∫–æ–º‚öî.\n–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!‚úÖ\n–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤ –±–µ—Å–µ–¥–µ —É–≤–µ–ª–∏—á–µ–Ω–æ –¥–æ 1 –º–∏–Ω—É—Ç—ã!`,
                        "keyboard": Keyboard.keyboard([
                            [
                                Keyboard.textButton({
                                    label: `–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞üí™`,
                                    color: Keyboard.NEGATIVE_COLOR
                                })
                            ]
                        ]).inline()
                    });
                }
            }
            else if(context.user.vip === '–î–µ–π—Å—Ç–≤—É–µ—Ç') {
                if(context.eventPayload.isChat) {
                    return vk.api.messages.edit({
                        "attachment": attachments.find(x => x.teacher === `${context.eventPayload.teacher}`)['attachment'],
                        "peer_id": context.peerId,
                        "conversation_message_id": messageId['items'][0].conversation_message_id,
                        "message": `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É!üî•\n–í—ã –ø–æ–ª—É—á–∏–ª–∏:\n\n‚Ä¢${random_strenght}(+25 VIP) –æ—á–∫–æ–≤ –≤–ª–∞–¥–µ–Ω–∏—è –∫–ª–∏–Ω–∫–æ–º‚öî.\n–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!‚úÖ\n–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤ –±–µ—Å–µ–¥–µ —É–≤–µ–ª–∏—á–µ–Ω–æ –¥–æ 1 –º–∏–Ω—É—Ç—ã!`,
                        "keyboard": Keyboard.keyboard([
                            [
                                Keyboard.textButton({
                                    label: `–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞üí™`,
                                    color: Keyboard.NEGATIVE_COLOR
                                })
                            ]
                        ]).inline()
                    });
                }
            }
            if(context.user.vip === false) {
                if(context.eventPayload.isChat) {
                    return vk.api.messages.edit({
                        "attachment": attachments.find(x => x.teacher === `${context.eventPayload.teacher}`)['attachment'],
                        "peer_id": context.peerId,
                        "conversation_message_id": messageId['items'][0].conversation_message_id,
                        "message": `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É!üî•\n–í—ã –ø–æ–ª—É—á–∏–ª–∏:\n\n‚Ä¢${random_strenght} –æ—á–∫–æ–≤ –≤–ª–∞–¥–µ–Ω–∏—è –∫–ª–∏–Ω–∫–æ–º‚öî.\n–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!‚úÖ\n–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤ –±–µ—Å–µ–¥–µ —É–≤–µ–ª–∏—á–µ–Ω–æ –¥–æ 1 –º–∏–Ω—É—Ç—ã!`,
                        "keyboard": Keyboard.keyboard([
                            [
                                    Keyboard.textButton({
                                    label: `–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞üí™`,
                                    color: Keyboard.NEGATIVE_COLOR
                                })
                            ]
                        ]).inline()
                    });
                }
            }
            else if(context.user.vip === '–î–µ–π—Å—Ç–≤—É–µ—Ç') {
                if(context.eventPayload.isChat) {
                    return vk.api.messages.edit({
                        "attachment": attachments.find(x => x.teacher === `${context.eventPayload.teacher}`)['attachment'],
                        "peer_id": context.peerId,
                        "conversation_message_id": messageId['items'][0].conversation_message_id,
                        "message": `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É!üî•\n–í—ã –ø–æ–ª—É—á–∏–ª–∏:\n\n‚Ä¢${random_strenght}(+25 VIP) –æ—á–∫–æ–≤ –≤–ª–∞–¥–µ–Ω–∏—è –∫–ª–∏–Ω–∫–æ–º‚öî.\n–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!‚úÖ\n–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤ –±–µ—Å–µ–¥–µ —É–≤–µ–ª–∏—á–µ–Ω–æ –¥–æ 1 –º–∏–Ω—É—Ç—ã!`,
                        "keyboard": Keyboard.keyboard([
                            [
                                    Keyboard.textButton({
                                    label: `–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞üí™`,
                                    color: Keyboard.NEGATIVE_COLOR
                                })
                            ]
                        ]).inline()
                    });
                }
            }
            
            if(context.user.vip === false) {
                return vk.api.messages.edit({
                    "attachment": attachments.find(x => x.teacher === `${context.eventPayload.teacher}`)['attachment'],
                    "peer_id": context.peerId,
                    "conversation_message_id": messageId['items'][0].conversation_message_id,
                    "message": `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É!üî•\n–í—ã –ø–æ–ª—É—á–∏–ª–∏:\n\n‚Ä¢${random_strenght} –æ—á–∫–æ–≤ –≤–ª–∞–¥–µ–Ω–∏—è –∫–ª–∏–Ω–∫–æ–º‚öî.\n–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!‚úÖ`,
                    "keyboard": Keyboard.keyboard([
                        [
                            Keyboard.textButton({
                                label: `–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞üí™`,
                                color: Keyboard.NEGATIVE_COLOR
                            })
                        ]
                    ]).inline()
                });
            }
            else if(context.user.vip === '–î–µ–π—Å—Ç–≤—É–µ—Ç') {
                return vk.api.messages.edit({
                    "attachment": attachments.find(x => x.teacher === `${context.eventPayload.teacher}`)['attachment'],
                    "peer_id": context.peerId,
                    "conversation_message_id": messageId['items'][0].conversation_message_id,
                    "message": `–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É!üî•\n–í—ã –ø–æ–ª—É—á–∏–ª–∏:\n\n‚Ä¢${random_strenght}(+25 VIP) –æ—á–∫–æ–≤ –≤–ª–∞–¥–µ–Ω–∏—è –∫–ª–∏–Ω–∫–æ–º‚öî.\n–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!‚úÖ`,
                    "keyboard": Keyboard.keyboard([
                        [
                            Keyboard.textButton({
                                label: `–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞üí™`,
                                color: Keyboard.NEGATIVE_COLOR
                            })
                        ]
                    ]).inline()
                });
            }
            
        }
        else {
            let random_strenght = utils.random(0, 5)

            if(context.eventPayload.isChat) {
                if(random_strenght > context.user.strenght || random_strenght === 0) return vk.api.messages.edit({
                    "peer_id": context.peerId,
                    "conversation_message_id": messageId['items'][0].conversation_message_id,
                    "message": `–í—ã –Ω–∞–∂–∞–ª–∏ –Ω–µ –Ω–∞ —Ç—É –∫–Ω–æ–ø–∫—É! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ —á–µ—Ä–µ–∑ 1 –º–∏–Ω—É—Ç—É(–æ–∂–∏–¥–∞–Ω–∏–µ —É–≤–µ–ª–∏—á–∏–Ω–æ –∏–∑-–∑–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≤ –±–µ—Å–µ–¥–µ). –° –≤–∞—Å –Ω–µ –±—ã–ª–æ –≤–∑—è—Ç–æ –≤–ª–∞–¥–µ–Ω–∏–µ. `
                });
                else {
                   context.user.strenght -= random_strenght
                   return vk.api.messages.edit({
                    "peer_id": context.peerId,
                    "conversation_message_id": messageId['items'][0].conversation_message_id,
                    "message": `–í—ã –Ω–∞–∂–∞–ª–∏ –Ω–µ –Ω–∞ —Ç—É –∫–Ω–æ–ø–∫—É! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ —á–µ—Ä–µ–∑ 1 –º–∏–Ω—É—Ç—É(–æ–∂–∏–¥–∞–Ω–∏–µ —É–≤–µ–ª–∏—á–∏–Ω–æ –∏–∑-–∑–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≤ –±–µ—Å–µ–¥–µ). –° –≤–∞—Å –±—ã–ª–∞ –≤–∑—è—Ç–∞ –ø–ª–∞—Ç–∞ –≤ –≤–∏–¥–µ ${random_strenght} –≤–ª–∞–¥–µ–Ω–∏—è. –í–∞—à–µ –≤–ª–∞–¥–µ–Ω–∏–µ - ${utils.sp(context.user.strenght)}`
                   });
                }
            }

            if(random_strenght > context.user.strenght || random_strenght === 0) return vk.api.messages.edit({
                "peer_id": context.peerId,
                "conversation_message_id": messageId['items'][0].conversation_message_id,
                "message": `–í—ã –Ω–∞–∂–∞–ª–∏ –Ω–µ –Ω–∞ —Ç—É –∫–Ω–æ–ø–∫—É! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥. –° –≤–∞—Å –Ω–µ –±—ã–ª–æ –≤–∑—è—Ç–æ –≤–ª–∞–¥–µ–Ω–∏–µ. `
            });
            else {
               context.user.strenght -= random_strenght
               return vk.api.messages.edit({
                "peer_id": context.peerId,
                "conversation_message_id": messageId['items'][0].conversation_message_id,
                "message": `–í—ã –Ω–∞–∂–∞–ª–∏ –Ω–µ –Ω–∞ —Ç—É –∫–Ω–æ–ø–∫—É! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥. –° –≤–∞—Å –±—ã–ª–∞ –≤–∑—è—Ç–∞ –ø–ª–∞—Ç–∞ –≤ –≤–∏–¥–µ ${random_strenght} –≤–ª–∞–¥–µ–Ω–∏—è. –í–∞—à–µ –≤–ª–∞–¥–µ–Ω–∏–µ - ${utils.sp(context.user.strenght)}`
               });
            }
        }
    }
    else if(context.eventPayload.command === `members`)
    {
        let clan = clans.find(x => x.cid === context.eventPayload.clan)

        let text = `–£—á–∞—Å—Ç–Ω–∏–∫–∏ –∫–ª–∞–Ω–∞ ${clan.name}:\n\n`

        let text2 = ''

        for(let i = 0; i in clan.members; i++)
        {
            let member = users.find(x => x.uid === clan.members[i])
            if(text2 === '')
            {
                text2 = text2 + `[id${member.id}|${member.nickname}]`
            }
            else
            {
                text2 = text2 + `, [id${member.id}|${member.nickname}]`
            }

        }
        text += text2
        return vk.api.messages.edit({
            "peer_id": context.peerId,
            "conversation_message_id": messageId['items'][0].conversation_message_id,
            "message": `${text}`,
            "keyboard": Keyboard.keyboard([
                [
                    Keyboard.callbackButton({
                        label: "–ù–∞–∑–∞–¥",
                        payload: {
                            command: `backClan`,
                            clan: clan.cid
                        },
                        color: Keyboard.NEGATIVE_COLOR
                    })
                ]
            ]).inline()
        });
    }
    else if(context.eventPayload.command === `backClan`)
    {
        let clan = clans.find(x => x.cid === context.eventPayload.clan)
        let clan_keyboard1 = Keyboard.keyboard([
            [
                Keyboard.callbackButton({
                    label: "–£—á–∞—Å—Ç–Ω–∏–∫–∏",
                    payload: {
                        command: `members`,
                        clan: clan.cid
                    },
                    color: Keyboard.POSITIVE_COLOR
                }),
        
                Keyboard.callbackButton({
                    label: "–ë–æ—Å—Å",
                    payload: {
                        command: `showClanBoss`,
                        clan: clan.cid
                    },
                    color: Keyboard.NEGATIVE_COLOR
                })
            ]
        ]).inline()

        let clan_keyboard2 = Keyboard.keyboard([
            [
                Keyboard.callbackButton({
                    label: "–£—á–∞—Å—Ç–Ω–∏–∫–∏",
                    payload: {
                        command: `members`,
                        clan: clan.cid
                    },
                    color: Keyboard.POSITIVE_COLOR
                }),
        
                Keyboard.callbackButton({
                    label: "–ë–æ—Å—Å",
                    payload: {
                        command: `showClanBoss`,
                        clan: clan.cid
                    },
                    color: Keyboard.NEGATIVE_COLOR
                })
            ],
            [
                Keyboard.callbackButton({
                    label: "‚öôÔ∏è–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ",
                    payload: {
                        command: `clanSettings`,
                        clan: clan.cid
                    },
                    color: Keyboard.PRIMARY_COLOR
                })
            ]
        ]).inline()

        let owner = users.find(x => x.uid === clan.owner)

        if(owner.uid === context.user.uid) {
            return vk.api.messages.edit({
                "peer_id": context.peerId,
                "conversation_message_id": messageId['items'][0].conversation_message_id,
                "message": `–ù–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–Ω–∞: ${clan.name}\n\n–ì–ª–∞–≤–∞ –∫–ª–∞–Ω–∞: [id${owner.id}|${owner.nickname}]\n–ö–æ–ª-–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: ${clan.members.length}\n–†–µ–ø—É—Ç–∞—Ü–∏—è: ${utils.sp(clan.reputation)}\n–°—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è: ${clan.link.short_url}`,
                "keyboard": clan_keyboard2,
                "attachment": clan.icon
            })    
        }

        else{
            return vk.api.messages.edit({
                "peer_id": context.peerId,
                "conversation_message_id": messageId['items'][0].conversation_message_id,
                "message": `–ù–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–Ω–∞: ${clan.name}\n\n–ì–ª–∞–≤–∞ –∫–ª–∞–Ω–∞: [id${owner.id}|${owner.nickname}]\n–ö–æ–ª-–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: ${clan.members.length}\n–†–µ–ø—É—Ç–∞—Ü–∏—è: ${utils.sp(clan.reputation)}\n–°—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è: ${clan.link.short_url}`,
                "keyboard": clan_keyboard1,
                "attachment": clan.icon
            })    
        }
        
        
    }
    else if(context.eventPayload.command === 'createClanBoss')
    {
    	if(context.user.uid !== context.eventPayload.user) return
    	let clan = clans.find(x => x.cid === context.eventPayload.clan)
    	let boss = context.eventPayload.boss
    	    
    	let icon = boss.icon
    	    
    	clan.boss.name = `${boss.name}`
    	clan.boss.hp = boss.hp
    	clan.boss.icon = icon
        clan.boss.maxHp = boss.hp
    	    
    	return vk.api.messages.edit({
    	    "peer_id": context.peerId,
    	    "conversation_message_id": messageId['items'][0].conversation_message_id,
            "message": `–ö–ª–∞–Ω–æ–≤—ã–π –±–æ—Å—Å –¥–ª—è –∫–ª–∞–Ω–∞ ${clan.name} —Å–æ–∑–¥–∞–Ω!\n\n–ò–º—è: ${boss.name}\n–•–ü: ${utils.sp(boss.hp)}`,
            "attachment": icon
    	})
    }
    else if(context.eventPayload.command === `showClanBoss`)
    {
        let clan = clans.find(x => x.cid === context.eventPayload.clan)
        let boss = clan.boss
        if(boss.name === null)
        {
            return vk.api.messages.edit({
                "peer_id": context.peerId,
                "conversation_message_id": messageId['items'][0].conversation_message_id,
                "message": `–£ –∫–ª–∞–Ω–∞ ${clan.name} –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–ª–∞–Ω–æ–≤—ã–π –±–æ—Å—Å!`,
                "keyboard": Keyboard.keyboard([
                    [
                        Keyboard.callbackButton({
                            label: "–ù–∞–∑–∞–¥",
                            payload: {
                                command: 'backClan',
                                clan: clan.cid,
                            },
                            color: Keyboard.NEGATIVE_COLOR
                        })
                    ]
                ]).inline()
            })
        }

        return vk.api.messages.edit({
            "peer_id": context.peerId,
            "conversation_message_id": messageId['items'][0].conversation_message_id,
            "message": `–ö–ª–∞–Ω–æ–≤—ã–π –±–æ—Å—Å –∫–ª–∞–Ω–∞ ${clan.name}:\n\n–ò–º—è: ${boss.name}\n–•–ü: ${utils.sp(boss.hp)}`,
            "attachment": `${boss.icon}`,
            "keyboard": Keyboard.keyboard([
                [
                    Keyboard.callbackButton({
                        label: "–ù–∞–∑–∞–¥",
                        payload: {
                            command: 'backClan',
                            clan: clan.cid
                        },
                        color: Keyboard.NEGATIVE_COLOR
                    })
                ]
            ]).inline()
        })
    }
    else if(context.eventPayload.command === `setNick`) {
        let nick = context.eventPayload.nick
        context.user.nickname = nick

        return vk.api.messages.edit({
            "peer_id": context.peerId,
            "conversation_message_id": messageId['items'][0].conversation_message_id,
            "message": `–ù–∏–∫ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –í–∞—à –Ω–∏–∫: ${nick}`
        })
    }
    else if(context.eventPayload.command === `destroyClan`) {
        let clan = clans.find(x => x.cid === context.eventPayload.clan)
        let owner = users.find(x => x.uid === clan.owner)
        if(context.userId !== owner.id) return;
        for(let i = 0; i in clan.members; i++) {
            let user = users.find(x => x.uid === clan.members[i])
            user.clan = null;
            if(clan.members[i] === owner.uid) continue;
            vk.api.messages.send({
                "peer_id": user.id,
                "user_id": user.id,
                "message": `–ì–ª–∞–≤–∞ [id${owner.id}|${owner.nickname}] —Ä–∞—Å–ø—É—Å—Ç–∏–ª –∫–ª–∞–Ω ${clan.name}!`,
                "attachment": `${clan.icon}`,
                "random_id": 0
            })
        }
        vk.api.messages.edit({
            "peer_id": context.peerId,
            "conversation_message_id": messageId['items'][0].conversation_message_id,
            "message": `–í—ã —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø—É—Å—Ç–∏–ª–∏ –∫–ª–∞–Ω ${clan.name}`,
            "attachment": `${clan.icon}`     
        })
        clan.delete = true;
        clan.name = ""

    }
    else if(context.eventPayload.command === `clanSettings`) {
        let clan = clans.find(x => x.cid === context.eventPayload.clan)
        let owner = users.find(x => x.uid === clan.owner)
        if(context.userId !== owner.id) return;
        vk.api.messages.edit({
            "peer_id": context.peerId,
            "conversation_message_id": messageId['items'][0].conversation_message_id,
            "message": `–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∞–Ω–æ–º:`,
            "keyboard": Keyboard.keyboard([
                [
                    Keyboard.callbackButton({
                        label: "–†–∞—Å–ø—É—Å—Ç–∏—Ç—å –∫–ª–∞–Ω",
                        payload: {
                            command: `confirm`,
                            commandYes: `destroyClan`,
                            commandNo: `backClan`,
                            name: `${clan.name}`,
                            text: `–í—ã —Ö–æ—Ç–∏—Ç–µ —Ä–∞—Å–ø—É—Å—Ç–∏—Ç—å –∫–ª–∞–Ω [hz]?`,
                            clan: clan.cid,
                            attachment: clan.icon
                        },
                        color: Keyboard.NEGATIVE_COLOR
                    }),
                    Keyboard.callbackButton({
                        label: "–ù–∞–∑–∞–¥",
                        payload: {
                            command: 'backClan',
                            clan: clan.cid
                        },
                        color: Keyboard.NEGATIVE_COLOR
                    })
                ]
            ]).inline()
        })
    }
    else if(context.eventPayload.command === `addPromo`) {
        if(context.userId !== context.eventPayload.user) return;

        ctx.clearRect(0, 0, 1920, 768)
        ctx.drawImage(img, 0, 0, 1920, 768)
        ctx.fillText(`${context.eventPayload.promo}`, 960, 384)
        ctx.lineWidth = 4
        ctx.strokeText(`${context.eventPayload.promo}`, 960, 384)

        const loh = canvas.toBuffer()

        const loh2 = await usera.upload.wallPhoto({
            source: {
                value: loh
            }
        })

        const loh3 = await vk.upload.messagePhoto({
            source: {
                value: loh
            }
        })

        const post = await usera.api.wall.post({
            "message": `–ù–æ–≤—ã–π –ø—Ä–æ–º–æ–∫–æ–¥!!!\n\n${context.eventPayload.strenght} –≤–ª–∞–¥–µ–Ω–∏—è\n${context.eventPayload.money} –π–µ–Ω\n${context.eventPayload.activations} –∞–∫—Ç–∏–≤–∞—Ü–∏–π\n\n–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: "–ø—Ä–æ–º–æ ${context.eventPayload.promo}"`,
            "attachments": loh2.toString(),
            "owner_id": -218252023
        })

        promos.push({
            strenght: context.eventPayload.strenght,
            money: context.eventPayload.money,
            promo: context.eventPayload.promo,
            activations: context.eventPayload.activations,
            users: [],
            post_id: post.post_id
        })

        await vk.api.messages.edit({
            "peer_id": context.peerId,
            "conversation_message_id": messageId['items'][0].conversation_message_id,
            "message": `–ü—Ä–æ–º–æ–∫–æ–¥ "${context.eventPayload.promo}" —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!\n\n–í–ª–∞–¥–µ–Ω–∏–µ: ${context.eventPayload.strenght}\n${context.eventPayload.money} –π–µ–Ω\n–ê–∫—Ç–∏–≤–∞—Ü–∏–π: ${context.eventPayload.activations}`,
            "attachment": loh3.toString()
        })
    }
    else if(context.eventPayload.command === `topStrenght`) {
        let top = [];
        let userp = users.find(x => x.id === context.userId)

        users.map(x => {
            top.push({ strenght: x.strenght, nick: x.nickname, id: x.id })
        })

        top.sort((a, b) => {
            return b.strenght - a.strenght
        })

        let text = ``;

        const find = () => {
            let pos = 10000;

            for (let i = 0; i < top.length; i++) {
                if(top[i].id === context.userId) return pos = i;
            }

            return pos;
        }

        if(users.length >= 10) {
            for (let i = 0; i < 10; i++) {
                if(!top[i]) return;
                const user = top[i]
                text += `${i === 9 ? `&#128287;` : `${i + 1}&#8419;`} @id${user.id} (${user.nick}) ‚Äî ${utils.sp(user.strenght)}\n`
            }
        } else {
            for (let i = 0; i < users.length; i++) {
                if(!top[i]) return;
                const user = top[i]
                text += `${i === users.length - 1 ? `${users.length}&#8419;` : `${i + 1}&#8419;`} @id${user.id} (${user.nick}) ‚Äî ${utils.sp(user.strenght)}\n`
            }
        }

        vk.api.messages.edit({
            "peer_id": context.peerId,
            "conversation_message_id": messageId['items'][0].conversation_message_id,
            "message": `—Ç–æ–ø:
            ${text}
    ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
    ${utils.gi(find() + 1)} ${userp.nickname} ‚Äî ${utils.sp(userp.strenght)}`,
            "keyboard": Keyboard.keyboard([
                [
                    Keyboard.callbackButton({
                        label: "–ù–∞–∑–∞–¥",
                        payload: {
                            command: 'backTop'
                        },
                        color: Keyboard.NEGATIVE_COLOR
                    })
                ]
            ]).inline()
        })
    }
    else if(context.eventPayload.command === `topMoney`) {
        let top = [];
        let userp = users.find(x => x.id === context.userId)

        users.map(x => {
            top.push({ money: x.money, nick: x.nickname, id: x.id })
        })

        top.sort((a, b) => {
            return b.money - a.money
        })

        let text = ``;

        const find = () => {
            let pos = 10000;

            for (let i = 0; i < top.length; i++) {
                if(top[i].id === context.userId) return pos = i;
            }

            return pos;
        }

        if(users.length >= 10) {
            for (let i = 0; i < 10; i++) {
                if(!top[i]) return;
                const user = top[i]
                text += `${i === 9 ? `&#128287;` : `${i + 1}&#8419;`} @id${user.id} (${user.nick}) ‚Äî ${utils.sp(user.money)}\n`
            }
        } else {
            for (let i = 0; i < users.length; i++) {
                if(!top[i]) return;
                const user = top[i]
                text += `${i === users.length - 1 ? `${users.length}&#8419;` : `${i + 1}&#8419;`} @id${user.id} (${user.nick}) ‚Äî ${utils.sp(user.money)}\n`
            }
        }

        vk.api.messages.edit({
            "peer_id": context.peerId,
            "conversation_message_id": messageId['items'][0].conversation_message_id,
            "message": `—Ç–æ–ø:
            ${text}
    ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
    ${utils.gi(find() + 1)} ${userp.nickname} ‚Äî ${utils.sp(userp.money)}`,
            "keyboard": Keyboard.keyboard([
                [
                    Keyboard.callbackButton({
                        label: "–ù–∞–∑–∞–¥",
                        payload: {
                            command: 'backTop'
                        },
                        color: Keyboard.NEGATIVE_COLOR
                    })
                ]
            ]).inline()
        })
    }
    else if(context.eventPayload.command === `topClans`) {
        let top = [];
        let userp = users.find(x => x.id === context.userId)
        let clanp = clans.find(x => x.cid === userp.clan);

        clans.map(x => {
            top.push({ reputation: x.reputation, name: x.name, cid: x.cid })
        })

        top.sort((a, b) => {
            return b.reputation - a.reputation
        })

        let text = ``;

        const find = () => {
            let pos = 10000;

            for (let i = 0; i < top.length; i++) {
                if(top[i].cid === clanp.cid) return pos = i;
            }

            return pos;
        }

        if(clans.length >= 10) {
            for (let i = 0; i < 10; i++) {
                if(!top[i]) return;
                const clan = top[i]
                text += `${i === 9 ? `&#128287;` : `${i + 1}&#8419;`} ${clan.name} ‚Äî ${utils.sp(clan.reputation)}\n`
            }
        } else {
            for (let i = 0; i < clans.length; i++) {
                if(!top[i]) return;
                const clan = top[i]
                text += `${i === clans.length - 1 ? `${clans.length}&#8419;` : `${i + 1}&#8419;`} ${clan.name} ‚Äî ${utils.sp(clan.reputation)}\n`
            }
        }

        if(clanp === undefined) vk.api.messages.edit({
            "peer_id": context.peerId,
            "conversation_message_id": messageId['items'][0].conversation_message_id,
            "message": `—Ç–æ–ø:
            ${text}`
        })
        else {
            vk.api.messages.edit({
                "peer_id": context.peerId,
                "conversation_message_id": messageId['items'][0].conversation_message_id,
                "message": `—Ç–æ–ø:
                ${text}
        ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
        ${utils.gi(find() + 1)} ${clanp.name} ‚Äî ${utils.sp(clanp.reputation)}`,
                "keyboard": Keyboard.keyboard([
                    [
                        Keyboard.callbackButton({
                            label: "–ù–∞–∑–∞–¥",
                            payload: {
                                command: 'backTop'
                            },
                            color: Keyboard.NEGATIVE_COLOR
                        })
                    ]
                ]).inline()
            })
        }
    }
    else if(context.eventPayload.command === `topLvl`) {
        let top = [];
        let userp = users.find(x => x.id === context.userId)

        users.map(x => {
            top.push({ lvl: x.lvl, nick: x.nickname, id: x.id })
        })

        top.sort((a, b) => {
            return b.lvl - a.lvl
        })

        let text = ``;

        const find = () => {
            let pos = 10000;

            for (let i = 0; i < top.length; i++) {
                if(top[i].id === context.userId) return pos = i;
            }

            return pos;
        }

        if(users.length >= 10) {
            for (let i = 0; i < 10; i++) {
                if(!top[i]) return;
                const user = top[i]
                text += `${i === 9 ? `&#128287;` : `${i + 1}&#8419;`} @id${user.id} (${user.nick}) ‚Äî ${utils.sp(user.lvl)}\n`
            }
        } else {
            for (let i = 0; i < users.length; i++) {
                if(!top[i]) return;
                const user = top[i]
                text += `${i === users.length - 1 ? `${users.length}&#8419;` : `${i + 1}&#8419;`} @id${user.id} (${user.nick}) ‚Äî ${utils.sp(user.lvl)}\n`
            }
        }

        vk.api.messages.edit({
            "peer_id": context.peerId,
            "conversation_message_id": messageId['items'][0].conversation_message_id,
            "message": `—Ç–æ–ø:
            ${text}
    ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
    ${utils.gi(find() + 1)} ${userp.nickname} ‚Äî ${utils.sp(userp.lvl)}`,
            "keyboard": Keyboard.keyboard([
                [
                    Keyboard.callbackButton({
                        label: "–ù–∞–∑–∞–¥",
                        payload: {
                            command: 'backTop'
                        },
                        color: Keyboard.NEGATIVE_COLOR
                    })
                ]
            ]).inline()
        })
    }
    else if(context.eventPayload.command === 'backTop') {
        vk.api.messages.edit({
            "peer_id": context.peerId,
            "conversation_message_id": messageId['items'][0].conversation_message_id,
            "message": "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–ø:",
            "keyboard": Keyboard.keyboard([
                [
                    Keyboard.callbackButton({
                        label: "–¢–æ–ø –ø–æ –≤–ª–∞–¥–µ–Ω–∏—é",
                        payload: {
                            command: 'topStrenght'
                        },
                        color: Keyboard.NEGATIVE_COLOR
                    })
                ],
                [
                    Keyboard.callbackButton({
                        label: "–¢–æ–ø –ø–æ –π–µ–Ω–∞–º",
                        payload: {
                            command: 'topMoney'
                        },
                        color: Keyboard.POSITIVE_COLOR
                    }),
                    Keyboard.callbackButton({
                        label: "–¢–æ–ø –ø–æ —É—Ä–æ–≤–Ω—é",
                        payload: {
                            command: 'topLvl'
                        },
                        color: Keyboard.POSITIVE_COLOR
                    })
                ],
                [
                    Keyboard.callbackButton({
                        label: "–¢–æ–ø –∫–ª–∞–Ω–æ–≤",
                        payload: {
                            command: 'topClans'
                        },
                        color: Keyboard.SECONDARY_COLOR
                    })
                ]
            ]).inline()
        })
    }
    else if(context.eventPayload.command === 'shopForward') {
        const pages = []
        for(let i = 0; i in shop; i++) {
            pages.push(shop[i].page)
        }
        const nextPage = context.eventPayload.page += 1
        const item = shop.find(x => x.page === nextPage)
        if(nextPage === getMaxOfArray(pages)) {
            vk.api.messages.edit({
                "peer_id": context.peerId,
                "conversation_message_id": messageId['items'][0].conversation_message_id,
                "message": `${item.name}\n\n–°—Ç–æ–∏–º–æ—Å—Ç—å: ${utils.sp(item.cost)}¬•\n–±–æ–Ω—É—Å: ${item.bonus * 100}%`,
                "keyboard": Keyboard.keyboard([
                    [
                        Keyboard.callbackButton({
                            label: "&#11013;",
                            payload: {
                                command: "shopBack",
                                page: item.page
                            },
                            color: Keyboard.PRIMARY_COLOR
                        }),
                        Keyboard.callbackButton({
                            label: "–ö—É–ø–∏—Ç—å",
                            payload: {
                                command: "buyNichirin",
                                item: item,
                                user: context.userId
                            },
                            color: Keyboard.POSITIVE_COLOR
                        })
                    ]
                ]).inline(),
                "attachment": item.attachment
            })
        } else {
            vk.api.messages.edit({
                "peer_id": context.peerId,
                "conversation_message_id": messageId['items'][0].conversation_message_id,
                "message": `${item.name}\n\n–°—Ç–æ–∏–º–æ—Å—Ç—å: ${utils.sp(item.cost)}¬•\n–±–æ–Ω—É—Å: ${item.bonus * 100}%`,
                "keyboard": Keyboard.keyboard([
                    [
                        Keyboard.callbackButton({
                            label: "&#11013;",
                            payload: {
                                command: "shopBack",
                                page: item.page
                            },
                            color: Keyboard.PRIMARY_COLOR
                        }),
                        Keyboard.callbackButton({
                            label: "–ö—É–ø–∏—Ç—å",
                            payload: {
                                command: "buyNichirin",
                                item: item,
                                user: context.userId
                            },
                            color: Keyboard.POSITIVE_COLOR
                        }),
                        Keyboard.callbackButton({
                            label: "&#10145;",
                            payload: {
                                command: "shopForward",
                                page: item.page
                            },
                            color: Keyboard.PRIMARY_COLOR
                        })
                    ]
                ]).inline(),
                "attachment": item.attachment
            })
        }
    }
    else if(context.eventPayload.command === 'shopBack') {
        const pages = []
        for(let i = 0; i in shop; i++) {
            pages.push(shop[i].page)
        }
        const previousPage = context.eventPayload.page -= 1
        const item = shop.find(x => x.page === previousPage)
        if(previousPage === getMinOfArray(pages)) {
            vk.api.messages.edit({
                "peer_id": context.peerId,
                "conversation_message_id": messageId['items'][0].conversation_message_id,
                "message": `${item.name}\n\n–°—Ç–æ–∏–º–æ—Å—Ç—å: ${utils.sp(item.cost)}¬•\n–±–æ–Ω—É—Å: ${item.bonus * 100}%`,
                "keyboard": Keyboard.keyboard([
                    [
                        Keyboard.callbackButton({
                            label: "–ö—É–ø–∏—Ç—å",
                            payload: {
                                command: "buyNichirin",
                                item: item,
                                user: context.userId
                            },
                            color: Keyboard.POSITIVE_COLOR
                        }),
                        Keyboard.callbackButton({
                            label: "&#10145;",
                            payload: {
                                command: "shopForward",
                                page: item.page
                            },
                            color: Keyboard.PRIMARY_COLOR
                        }),
                    ]
                ]).inline(),
                "attachment": item.attachment
            })
        } else {
            vk.api.messages.edit({
                "peer_id": context.peerId,
                "conversation_message_id": messageId['items'][0].conversation_message_id,
                "message": `${item.name}\n\n–°—Ç–æ–∏–º–æ—Å—Ç—å: ${utils.sp(item.cost)}¬•\n–±–æ–Ω—É—Å: ${item.bonus * 100}%`,
                "keyboard": Keyboard.keyboard([
                    [
                        Keyboard.callbackButton({
                            label: "&#11013;",
                            payload: {
                                command: "shopBack",
                                page: item.page
                            },
                            color: Keyboard.PRIMARY_COLOR
                        }),
                        Keyboard.callbackButton({
                            label: "–ö—É–ø–∏—Ç—å",
                            payload: {
                                command: "buyNichirin",
                                item: item,
                                user: context.userId
                            },
                            color: Keyboard.POSITIVE_COLOR
                        }),
                        Keyboard.callbackButton({
                            label: "&#10145;",
                            payload: {
                                command: "shopForward",
                                page: item.page
                            },
                            color: Keyboard.PRIMARY_COLOR
                        })
                    ]
                ]).inline(),
                "attachment": item.attachment
            })
        }
    }
    else if(context.eventPayload.command === 'buyNichirin') {
        if(context.userId !== context.eventPayload.user) return;
        const item = shop.find(x => x.name === context.user.weapon)
        if(context.user.weapon !== null) return vk.api.messages.edit({
            "peer_id": context.peerId,
            "attachment": context.eventPayload.item.attachment,
            "conversation_message_id": messageId['items'][0].conversation_message_id,
            "message": `–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∫–ª–∏–Ω–æ–∫!`,
            "keyboard": Keyboard.keyboard([
                [
                    Keyboard.callbackButton({
                        label: "–ù–∞–∑–∞–¥",
                        payload: {
                            command: "shop",
                            item: context.eventPayload.item
                        },
                        color: Keyboard.NEGATIVE_COLOR
                    })
                ]
            ]).inline(),
            "attachment": item.attachment
        })
        if(context.user.money < context.eventPayload.item.cost) return vk.api.messages.edit({
            "peer_id": context.peerId,
            "attachment": context.eventPayload.item.attachment,
            "conversation_message_id": messageId['items'][0].conversation_message_id,
            "message": `–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –π–µ–Ω!\n\n–ë–∞–ª–∞–Ω—Å: ${context.user.money}¬•`,
            "keyboard": Keyboard.keyboard([
                [
                    Keyboard.callbackButton({
                        label: "–ù–∞–∑–∞–¥",
                        payload: {
                            command: "shop",
                            item: context.eventPayload.item
                        },
                        color: Keyboard.NEGATIVE_COLOR
                    })
                ]
            ]).inline()
        })


        vk.api.messages.edit({
            "peer_id": context.peerId,
            "attachment": context.eventPayload.item.attachment,
            "conversation_message_id": messageId['items'][0].conversation_message_id,
            "message": `–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å –¥–∞–Ω–Ω—ã–π –∫–ª–∏–Ω–æ–∫ –∑–∞ ${utils.sp(context.eventPayload.item.cost)}¬•`,
            "keyboard": Keyboard.keyboard([
                [
                    Keyboard.callbackButton({
                        label: "–î–∞",
                        payload: {
                            command: "buyNichirinYes",
                            user: context.userId,
                            item: context.eventPayload.item
                        },
                        color: Keyboard.POSITIVE_COLOR
                    })
                ]
            ]).inline()
        })
    }
    else if(context.eventPayload.command === 'shop') {
        const pages = []
        for(let i = 0; i in shop; i++) {
            pages.push(shop[i].page)
        }
        const item = context.eventPayload.item
        if(item.page === getMinOfArray(pages)) {
            vk.api.messages.edit({
                "peer_id": context.peerId,
                "conversation_message_id": messageId['items'][0].conversation_message_id,
                "message": `${item.name}\n\n–°—Ç–æ–∏–º–æ—Å—Ç—å: ${utils.sp(item.cost)}¬•\n–±–æ–Ω—É—Å: ${item.bonus * 100}%`,
                "keyboard": Keyboard.keyboard([
                    [
                        Keyboard.callbackButton({
                            label: "–ö—É–ø–∏—Ç—å",
                            payload: {
                                command: "buyNichirin",
                                item: item,
                                user: context.userId
                            },
                            color: Keyboard.POSITIVE_COLOR
                        }),
                        Keyboard.callbackButton({
                            label: "&#10145;",
                            payload: {
                                command: "shopForward",
                                page: item.page
                            },
                            color: Keyboard.PRIMARY_COLOR
                        }),
                    ]
                ]).inline(),
                "attachment": item.attachment
            })
        } else if(item.page === getMaxOfArray(pages)) {
            vk.api.messages.edit({
                "peer_id": context.peerId,
                "conversation_message_id": messageId['items'][0].conversation_message_id,
                "message": `${item.name}\n\n–°—Ç–æ–∏–º–æ—Å—Ç—å: ${utils.sp(item.cost)}¬•\n–±–æ–Ω—É—Å: ${item.bonus * 100}%`,
                "keyboard": Keyboard.keyboard([
                    [
                        Keyboard.callbackButton({
                            label: "&#11013;",
                            payload: {
                                command: "shopBack",
                                page: item.page
                            },
                            color: Keyboard.PRIMARY_COLOR
                        }),
                        Keyboard.callbackButton({
                            label: "–ö—É–ø–∏—Ç—å",
                            payload: {
                                command: "buyNichirin",
                                item: item,
                                user: context.userId
                            },
                            color: Keyboard.POSITIVE_COLOR
                        })
                    ]
                ]).inline(),
                "attachment": item.attachment
            })
        }
    }
    else if(context.eventPayload.command === 'buyNichirinYes') {
        if(context.userId !== context.eventPayload.user) return;
        const item = context.eventPayload.item
        context.user.weapon = item.name
        let item_secondName = item.name.match(/(?<=\()(.*)(?=\))/ig)
        item_secondName = item_secondName[0].toLowerCase()
        context.user.money -= item.cost
        vk.api.messages.edit({
            "peer_id": context.peerId,
            "conversation_message_id": messageId['items'][0].conversation_message_id,
            "message": `–í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ ${item_secondName}`,
        })
    }
})

const cmd = {
    hear: (p, f) => {
        commands.push([p, f]);
    }
};

cmd.hear(/^(?:—Ç–µ—Å—Ç77)\s(.*)$/i, async (msg, bot) => {
    msg.args[1] = utils.repl(msg.args[1])
    return bot(msg.args[1])
})

cmd.hear(/^(?:–ø–æ–º–æ—â—å)$/i, async (msg, bot) => {
    return bot(`–ò–Ω—Ñ–æ - –≤—ã–≤–æ–¥–∏—Ç –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å\n–ë–æ–Ω—É—Å - –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å\n–¢—Ä–µ—à–∞ - –Ω—É —Ç–∏–ø —Ö–∑\n–ë–æ—Å—Å - –∞—Ç–∞–∫–æ–≤–∞—Ç—å –±–æ—Å—Å–∞\n–ë–æ—Å—Å –∏–Ω—Ñ–æ - –Ω—É —Ç—ã –∂–µ –Ω–µ —Ç—É–ø–æ–π?\n–ö–ª–∞–Ω –ø–æ–º–æ—â—å - –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∫–ª–∞–Ω–∞\n–ù–∏–∫ (–∂–µ–ª–∞–Ω–Ω—ã–π –Ω–∏–∫ –¥–æ 30 —Å–∏–º–≤–æ–ª–æ–≤) - —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∏–∫–∞`);
});

cmd.hear(/^(?:–∏–Ω—Ñ–æ)$/i, async (msg, bot) => {
    let clan = clans.find(x => x.cid === msg.user.clan)
    let text = `–í–∞—à UID: ${utils.sp(msg.user.uid)}\n–í–∞—à –Ω–∏–∫: ${msg.user.nickname}\n–í–∞—à –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫: ${msg.user.teacher}\n–ë–∞–ª–∞–Ω—Å: ${utils.sp(msg.user.money)}\n–í–ª–∞–¥–µ–Ω–∏–µ: ${utils.sp(msg.user.strenght)}\nExp: ${utils.sp(msg.user.exp)}|${utils.sp(msg.user.nextExp)}\n–£—Ä–æ–≤–µ–Ω—å: ${utils.sp(msg.user.lvl)}`
    if(msg.user.clan !== null) text += `\n–ö–ª–∞–Ω: ${clan.name}`
    if(msg.user.weapon !== null) text += `\n–ö–ª–∏–Ω–æ–∫: ${msg.user.weapon}`
    if(msg.user.vip !== false) text += `\n–í–∏–ø —Å—Ç–∞—Ç—É—Å: –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω`
    return bot(text);
});

cmd.hear(/^(?:–±–æ–Ω—É—Å)$/i, async (msg, bot) => {
    if(msg.user.timers.bonus > getUnix()) return bot(`–í—ã —É–∂–µ –±—Ä–∞–ª–∏ –±–æ–Ω—É—Å, –ø–æ–¥–æ–∂–¥–∏—Ç–µ ${unixStampLeft(msg.user.timers.bonus - Date.now())}`);

    getUnix() + 86400000

    if(msg.user.vip === false) {
        let bonus_money = utils.random(1000, 10000)
        msg.user.money += bonus_money;
        msg.user.timers.bonus = getUnix() + 86400000;
        return bot(`–í—ã –ø–æ–ª—É—á–∏–ª–∏ ${utils.sp(bonus_money)}¬•. –î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –±–æ–Ω—É—Å–∞ - 24 —á–∞—Å–∞.`);
    }
    else if(msg.user.vip === '–î–µ–π—Å—Ç–≤—É–µ—Ç') {
        let bonus_money = utils.random(5000, 50000)
        msg.user.money += bonus_money;
        msg.user.timers.bonus = getUnix() + 86400000;
        return bot(`–í—ã –ø–æ–ª—É—á–∏–ª–∏ ${utils.sp(bonus_money)}¬•. –î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –±–æ–Ω—É—Å–∞ - 24 —á–∞—Å–∞.`);
    }
});

cmd.hear(/^(?:—Ç—Ä–µ—à–∞|—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞|–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞üí™)$/i, async (msg, bot) => {
    if(msg.user.timers.training > getUnix()) return bot(`–î–ª—è —Å–ª–µ–¥—É—é—â–µ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –ø–æ–¥–æ–∂–¥–∏—Ç–µ ${unixStampLeft(msg.user.timers.training - Date.now())}`
    )
    function mixarr(arr) {
        return arr.map(i=>[Math.random(), i]).sort().map(i=>i[1])
    }
    let teacherTraining2 = mixarr(teacherTraining);
    let hz = utils.pick(attachments)

    msg.user.needCall = hz.teacher;

    return bot(`üî•–í—ã –Ω–∞—á–∞–ª–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É —Å –≤–∞—à–∏–º –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–º. –ß—Ç–æ–±—ã –∑–∞–∫–æ–Ω—á–∏—Ç—å –µ—ë, –æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ, –∫—Ç–æ –Ω–∞ —Ñ–æ—Ç–æüî•`, {
        attachment: hz.attachment,
        keyboard: Keyboard.keyboard([
            [
                Keyboard.callbackButton({
                    label: `${teacherTraining2[0]}`,
                    payload: {
                        command: `train`,
                        teacher: `${teacherTraining2[0]}`,
                        user: msg.user.id,
                        isChat: msg.isChat
                    }
                }),
                Keyboard.callbackButton({
                    label: `${teacherTraining2[1]}`,
                    payload: {
                        command: `train`,
                        teacher: `${teacherTraining2[1]}`,
                        user: msg.user.id,
                        isChat: msg.isChat
                    }
                })
            ],
            [
                Keyboard.callbackButton({
                    label: `${teacherTraining2[2]}`,
                    payload: {
                        command: `train`,
                        teacher: `${teacherTraining2[2]}`,
                        user: msg.user.id,
                        isChat: msg.isChat
                    }
                }),
                Keyboard.callbackButton({
                    label: `${teacherTraining2[3]}`,
                    payload: {
                        command: `train`,
                        teacher: `${teacherTraining2[3]}`,
                        user: msg.user.id,
                        isChat: msg.isChat
                    }
                })
            ],
            [
                Keyboard.callbackButton({
                    label: `${teacherTraining2[4]}`,
                    payload: {
                        command: `train`,
                        teacher: `${teacherTraining2[4]}`,
                        user: msg.user.id,
                        isChat: msg.isChat
                    }
                }),
                Keyboard.callbackButton({
                    label: `${teacherTraining2[5]}`,
                    payload: {
                        command: `train`,
                        teacher: `${teacherTraining2[5]}`,
                        user: msg.user.id,
                        isChat: msg.isChat
                    }
                })
            ],
            [
                Keyboard.callbackButton({
                    label: `${teacherTraining2[6]}`,
                    payload: {
                        command: `train`,
                        teacher: `${teacherTraining2[6]}`,
                        user: msg.user.id,
                        isChat: msg.isChat
                    }
                }),
                Keyboard.callbackButton({
                    label: `${teacherTraining2[7]}`,
                    payload: {
                        command: `train`,
                        teacher: `${teacherTraining2[7]}`,
                        user: msg.user.id,
                        isChat: msg.isChat
                    }
                })
            ],
            [
                Keyboard.callbackButton({
                    label: `${teacherTraining2[8]}`,
                    payload: {
                        command: `train`,
                        teacher: `${teacherTraining2[8]}`,
                        user: msg.user.id,
                        isChat: msg.isChat
                    }
                }),
                Keyboard.callbackButton({
                    label: `${teacherTraining2[9]}`,
                    payload: {
                        command: `train`,
                        teacher: `${teacherTraining2[9]}`,
                        user: msg.user.id,
                        isChat: msg.isChat
                    }
                })
            ]
        ]).inline()
    })
})

cmd.hear(/^(?:—Ç–µ—Å—Ç)$/i, async (msg, bot) => {
    let a = [
        {
            name: "–í–µ—Ç–µ—Ä",
            int: 60
        }, 
        {
            name: "–í–æ–¥–∞",
            int: 60
        }, 
        {
            name: "–ì—Ä–æ–º",
            int: 60
        },
        {
            name: "–ó–≤–µ—Ä—å",
            int: 35
        },
        {
            name: "–∑–≤—É–∫",
            int: 15
        },
        {
            name: "–∑–º–µ—è",
            int: 15
        },
        {
            name: "–∫–∞–º–µ–Ω—å",
            int: 60
        },
        {
            name: "–ª—é–±–æ–≤—å",
            int: 15
        },
        {
            name: "–Ω–∞—Å–µ–∫–æ–º–æ–µ",
            int: 15
        },
        {
            name: "–ø–ª–∞–º—è",
            int: 60
        },
        {
            name: "—Ç—É–º–∞–Ω",
            int: 15
        },
        {
            name: "—Ü–≤–µ—Ç–æ–∫",
            int: 20
        },
        {
            name: "–ª—É–Ω–∞",
            int: 8
        },
        {
            name: "—Å–æ–ª–Ω—Ü–µ",
            int: 3
        },
    ];

    let sum = 0;
    for (let i = 0; i < a.length; i++) {
      sum += a[i].int;
    }
    
    let rand = Math.floor(Math.random() * sum);
    
    let i = 0;
    for (let s = a[0].int; s <= rand; s += a[i].int) {
      i++;
    }
    
    bot(a[i].name);
});

cmd.hear(/^(?:\+–≤–ª–∞–¥–µ–Ω–∏–µ|\+str)\s([0-9–ê-–Ø]+)\s(.*)$/i, async (msg, bot) => {
    if(!msg.user.adm && msg.isChat) return bot(`–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã. –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã, –ø–∏—à–∏—Ç–µ "–ø–æ–º–æ—â—å".`);
    else if(!msg.user.adm && msg.isChat) return;
    let user = msg.args[2]
    msg.args[1] = utils.repl(msg.args[1])
    if(user.indexOf('@') != -1) {
        user = user.replace(/\[id(.*)\|/ig, '')
        user = user.replace(']', '')
        user_id = user.replace('@', '')
        user = await vk.api.users.get({
            user_ids: user_id
        })
        user = user[0].id
    }
    else if(user.indexOf('https://vk.com/') != -1 || user.indexOf('https://m.vk.com/') != -1) {
        if(user.indexOf('https://vk.com/') != -1) {
            user_id = user.replace('https://vk.com/', '')  
        }
        else {
            user_id = user.replace('https://m.vk.com/', '')
        }
        
        user = await vk.api.users.get({
            user_ids: user_id
        })
        user = user[0].id
    }
    else {
        user = users.find(x => x.uid === Number(user))
        user = user.id
    }
    let user_bot = users.find(x => x.id === user)
    if(!user_bot) return bot(`–î–∞–Ω–Ω—ã–π –∏–≥—Ä–æ–∫ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ –±–æ—Ç–µ!`)
    user_bot.strenght += Number(msg.args[1])
    return bot(`–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–ª–∏ [id${user_bot.id}|${user_bot.nickname}] –≤–ª–∞–¥–µ–Ω–∏–µ, –≤ —Ä–∞–∑–º–µ—Ä–µ ${utils.sp(Number(msg.args[1]))}`, {
        disable_mentions: 1
    })
})

cmd.hear(/^(?:-–≤–ª–∞–¥–µ–Ω–∏–µ|-str)\s([0-9–ê-–Ø]+)\s(.*)$/i, async (msg, bot) => {
    if(!msg.user.adm && !msg.isChat) return bot(`–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã. –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã, –ø–∏—à–∏—Ç–µ "–ø–æ–º–æ—â—å".`);
    else if(!msg.user.adm && msg.isChat) return;
    let user = msg.args[2]
    msg.args[1] = utils.repl(msg.args[1])
    if(user.indexOf('@') != -1) {
        user = user.replace(/\[id(.*)\|/ig, '')
        user = user.replace(']', '')
        user_id = user.replace('@', '')
        user = await vk.api.users.get({
            user_ids: user_id
        })
        user = user[0].id
    }
    else if(user.indexOf('https://vk.com/') != -1 || user.indexOf('https://m.vk.com/') != -1) {
        if(user.indexOf('https://vk.com/') != -1) {
            user_id = user.replace('https://vk.com/', '')  
        }
        else {
            user_id = user.replace('https://m.vk.com/', '')
        }
        
        user = await vk.api.users.get({
            user_ids: user_id
        })
        user = user[0].id
    }
    else {
        user = users.find(x => x.uid === Number(user))
        user = user.id
    }
    let user_bot = users.find(x => x.id === user)
    if(!user_bot) return bot(`–î–∞–Ω–Ω—ã–π –∏–≥—Ä–æ–∫ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ –±–æ—Ç–µ!`)
    user_bot.strenght -= Number(msg.args[1])
    return bot(`–í—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ [id${user_bot.id}|${user_bot.nickname}] –≤–ª–∞–¥–µ–Ω–∏–µ, –≤ —Ä–∞–∑–º–µ—Ä–µ ${utils.sp(Number(msg.args[1]))}`, {
        disable_mentions: 1
    })
})

cmd.hear(/^(?:\+–π–µ–Ω—ã|\+money)\s([0-9–ê-–Ø]+)\s(.*)$/i, async (msg, bot) => {
    if(!msg.user.adm && !msg.isChat) return bot(`–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã. –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã, –ø–∏—à–∏—Ç–µ "–ø–æ–º–æ—â—å".`);
    else if(!msg.user.adm && msg.isChat) return;
    let user = msg.args[2]
    msg.args[1] = utils.repl(msg.args[1])
    if(user.indexOf('@') != -1) {
        user = user.replace(/\[id(.*)\|/ig, '')
        user = user.replace(']', '')
        user_id = user.replace('@', '')
        user = await vk.api.users.get({
            user_ids: user_id
        })
        user = user[0].id
    }
    else if(user.indexOf('https://vk.com/') != -1 || user.indexOf('https://m.vk.com/') != -1) {
        if(user.indexOf('https://vk.com/') != -1) {
            user_id = user.replace('https://vk.com/', '')  
        }
        else {
            user_id = user.replace('https://m.vk.com/', '')
        }
        
        user = await vk.api.users.get({
            user_ids: user_id
        })
        user = user[0].id
    }
    else {
        user = users.find(x => x.uid === Number(user))
        user = user.id
    }
    let user_bot = users.find(x => x.id === user)
    if(!user_bot) return bot(`–î–∞–Ω–Ω—ã–π –∏–≥—Ä–æ–∫ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ –±–æ—Ç–µ!`)
    user_bot.money += Number(msg.args[1])
    return bot(`–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–ª–∏ [id${user_bot.id}|${user_bot.nickname}] –π–µ–Ω—ã, –≤ —Ä–∞–∑–º–µ—Ä–µ ${utils.sp(Number(msg.args[1]))}`, {
        disable_mentions: 1
    })
})

cmd.hear(/^(?:-–π–µ–Ω—ã|-money)\s([0-9–ê-–Ø]+)\s(.*)$/i, async (msg, bot) => {
    if(!msg.user.adm && !msg.isChat) return bot(`–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã. –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã, –ø–∏—à–∏—Ç–µ "–ø–æ–º–æ—â—å".`);
    else if(!msg.user.adm && msg.isChat) return;
    let user = msg.args[2]
    msg.args[1] = utils.repl(msg.args[1])
    if(user.indexOf('@') != -1) {
        user = user.replace(/\[id(.*)\|/ig, '')
        user = user.replace(']', '')
        user_id = user.replace('@', '')
        user = await vk.api.users.get({
            user_ids: user_id
        })
        user = user[0].id
    }
    else if(user.indexOf('https://vk.com/') != -1 || user.indexOf('https://m.vk.com/') != -1) {
        if(user.indexOf('https://vk.com/') != -1) {
            user_id = user.replace('https://vk.com/', '')  
        }
        else {
            user_id = user.replace('https://m.vk.com/', '')
        }
        
        user = await vk.api.users.get({
            user_ids: user_id
        })
        user = user[0].id
    }
    else {
        user = users.find(x => x.uid === Number(user))
        user = user.id
    }
    let user_bot = users.find(x => x.id === user)
    if(!user_bot) return bot(`–î–∞–Ω–Ω—ã–π –∏–≥—Ä–æ–∫ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ –±–æ—Ç–µ!`)
    user_bot.money -= Number(msg.args[1])
    return bot(`–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–±—Ä–∞–ª–∏ [id${user_bot.id}|${user_bot.nickname}] –π–µ–Ω, –≤ —Ä–∞–∑–º–µ—Ä–µ ${utils.sp(Number(msg.args[1]))}¬•`, {
        disable_mentions: 1
    })
})

cmd.hear(/^(?:\+promo|\+–ø—Ä–æ–º–æ)\s([0-9–ê-–Ø]+)\s([0-9–ê-–Ø]+)\s([0-9–ê-–Ø]+)\s(.*)$/i, async (msg, bot) => {
    if(!msg.user.adm && !msg.isChat) return bot(`–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã. –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã, –ø–∏—à–∏—Ç–µ "–ø–æ–º–æ—â—å".`);
    else if(!msg.user.adm && msg.isChat) return;
    let strenght = utils.repl(msg.args[1]);
    let money = utils.repl(msg.args[2]);
    let activations = utils.repl(msg.args[3])
    let promo = msg.args[4];
    let promo_search = promos.find(x => x.promo === promo)
    if(promo_search) return bot(`–ü—Ä–æ–º–æ–∫–æ–¥ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ —Å–æ–∑–¥–∞–Ω!`)
    bot(`–ù–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: ${promo}\n–í–ª–∞–¥–µ–Ω–∏–µ: ${strenght}\n–ô–µ–Ω: ${money}\n–ê–∫—Ç–∏–≤–∞—Ü–∏–π: ${activations}\n\n–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥?`, {
        keyboard: Keyboard.keyboard([
            [
                Keyboard.callbackButton({
                    label: "–î–∞",
                    payload: {
                        command: `addPromo`,
                        strenght: strenght,
                        money: money,
                        promo: promo,
                        activations: activations,
                        user: msg.senderId
                    },
                    color: Keyboard.POSITIVE_COLOR
                })
            ]
        ]).inline()
    })
})

cmd.hear(/^(?:–ø—Ä–æ–º–æ)\s(.*)$/i, async (msg, bot) => {
    let promo = promos.find(x => x.promo === msg.args[1])
    let user = users.find(x => x.id === msg.senderId)
    if(!promo) return bot(`–ü—Ä–æ–º–æ–∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω!`)
    if(promo.users.length >= promo.activations) return bot(`–ê–∫—Ç–∏–≤–∞—Ü–∏–∏ –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å!`)
    let search = promo.users.find(x => x === user.uid)
    if(search) return bot(`–í—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –¥–∞–Ω–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥!`)
    promo.users.push(user.uid)
    user.strenght += promo.strenght
    user.money += promo.money
    if(promo.users.length >= promo.activations) usera.api.wall.delete({
        "owner_id": -218252023,
        "post_id": promo.post_id
    })
    return bot(`–í—ã —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥!`)
})

cmd.hear(/^(?:–±–∞–Ω|ban)\s([0-9]+)\s(.*)$/i, async (msg, bot) => {
    if(!msg.user.adm && !msg.isChat) return bot(`–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã. –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã, –ø–∏—à–∏—Ç–µ "–ø–æ–º–æ—â—å".`);
    else if(!msg.user.adm && msg.isChat) return;

    let user = users.find(x => x.uid === Number(msg.args[1]));

    if(!user) return bot(`–ò–≥—Ä–æ–∫ —Å –¥–∞–Ω–Ω—ã–º uid –Ω–µ –Ω–∞–π–¥–µ–Ω!`)

    let adm = users.find(x => x.id === Number(user.ban_info.adm))

    

    if(user.ban_info.ban === true) {
        return bot(`–ò–≥—Ä–æ–∫ —É–∂–µ –∑–∞–±–∞–Ω–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º [id${adm.id}|${adm.nickname}]`, {
            disable_mentions: 1
        });
    }

    user.ban_info.ban = true;
    user.ban_info.adm = msg.user.id;
    user.ban_info.reason = msg.args[2];

    vk.api.messages.send({
        "peer_id": user.id,
        "user_id": user.id,
        "message": `üö´–í—ã –±—ã–ª–∏ –∑–∞–±–∞–Ω–µ–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º [id${msg.user.id}|${msg.user.nickname}]üö´\n–ü—Ä–∏—á–∏–Ω–∞: ${msg.args[2]}`,
        "random_id": 0
    })

    if(msg.senderId !== 361263304) {
        vk.api.messages.send({
            "peer_id": 361263304,
            "user_id": 361263304,
            "message": `‚ö†Ô∏è–ò–≥—Ä–æ–∫ [id${user.id}|${user.nickname}] –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º [id${msg.user.id}|${msg.user.nickname}]‚ö†Ô∏è`,
            "random_id": 0
        })
    }

    return bot(`–ò–≥—Ä–æ–∫ [id${user.id}|${user.nickname}] –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–±–∞–Ω–µ–Ω –ø–æ –ø—Ä–∏—á–∏–Ω–µ: ${user.ban_info.reason}`, {
        disable_mentions: 1
    })
})

cmd.hear(/^(?:—Ä–∞–∑–±–∞–Ω|unban)\s([0-9]+)$/i, async (msg, bot) => {
    if(!msg.user.adm && !msg.isChat) return bot(`–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã. –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã, –ø–∏—à–∏—Ç–µ "–ø–æ–º–æ—â—å".`);
    else if(!msg.user.adm && msg.isChat) return;

    let user = users.find(x => x.uid === Number(msg.args[1]));

    if(!user) return bot(`–ò–≥—Ä–æ–∫ —Å –¥–∞–Ω–Ω—ã–º uid –Ω–µ –Ω–∞–π–¥–µ–Ω!`)

    if(!user.ban_info.ban) return bot(`–£ [id${user.id}|${user.nickname}] –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –±–∞–Ω!`, {
        disable_mentions: 1
    })

    user.ban_info.ban = false;
    user.ban_info.adm = null;
    user.ban_info.reason = "";

    vk.api.messages.send({
        "peer_id": user.id,
        "user_id": user.id,
        "message": `‚úÖ–í—ã –±—ã–ª–∏ —Ä–∞–∑–±–∞–Ω–µ–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º [id${msg.user.id}|${msg.user.nickname}]‚úÖ`,
        "random_id": 0
    })

    if(msg.senderId !== 361263304) {
        vk.api.messages.send({
            "peer_id": 361263304,
            "user_id": 361263304,
            "message": `‚ö†Ô∏è–ò–≥—Ä–æ–∫ [id${user.id}|${user.nickname}] –±—ã–ª —Ä–∞–∑–±–∞–Ω–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º [id${msg.user.id}|${msg.user.nickname}]‚ö†Ô∏è`,
            "random_id": 0
        })
    }

    return bot(`–ò–≥—Ä–æ–∫ [id${user.id}|${user.nickname}] –±—ã–ª —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–±–∞–Ω–µ–Ω!`, {
        disable_mentions: 1
    })

})

cmd.hear(/^(?:setadm|\+adm)\s([0-9]+)$/i, async (msg, bot) => {
    if(msg.user.id !== 657796581 && msg.user.id !== 361263304 && msg.user.id !== 675195902 && !msg.isChat) return bot(`–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã. –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã, –ø–∏—à–∏—Ç–µ "–ø–æ–º–æ—â—å".`)
    else if(msg.user.id !== 657796581 && msg.user.id !== 361263304 && msg.isChat) return;

    let user = users.find(x => x.uid === Number(msg.args[1]))
    if(!user) return bot(`–î–∞–Ω–Ω—ã–π –∏–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!`)

    user.adm = true
    return bot(`–í—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞–∑–Ω–∞—á–∏–ª–∏ [id${user.id}|${user.nickname}] —Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!`, {
        disable_mentions: 1
    })
})

cmd.hear(/^(?:unadm|-adm)\s([0-9]+)$/i, async (msg, bot) => {
    if(msg.user.id !== 657796581 && msg.user.id !== 361263304 && msg.user.id !== 675195902) return bot(`–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã. –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã, –ø–∏—à–∏—Ç–µ "–ø–æ–º–æ—â—å".`);
    else if(msg.user.id !== 657796581 && msg.user.id !== 361263304 && msg.user.id !== 675195902) return;

    let user = users.find(x => x.uid === Number(msg.args[1]))
    if(!user) return bot(`–î–∞–Ω–Ω—ã–π –∏–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!`)

    user.adm = false
    return bot(`–í—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ [id${user.id}|${user.nickname}] —Å —Ä–æ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!`, {
        disable_mentions: 1
    })
})

cmd.hear(/^(?:–±–æ—Å—Å|–ê—Ç–∞–∫–∞ –±–æ—Å—Å–∞)$/i, async (msg, bot) => {
    let money;
    let item = shop.find(x => x.name === msg.user.weapon)
    if(msg.user.timers.boss > getUnix()) return bot(`–î–ª—è —Å–ª–µ–¥—É—é—â–µ–π –∞—Ç–∞–∫–∏ –ø–æ–¥–æ–∂–¥–∏—Ç–µ ${unixStampLeft(msg.user.timers.boss - Date.now())}`
    )

    if(msg.user.vip === false) {
        getUnix() + 1800000
    }
    else if(msg.user.vip === '–î–µ–π—Å—Ç–≤—É–µ—Ç') {
        getUnix() + 1200000
    }

    let damage;
    if(msg.user.vip === false) {
        msg.user.boss_damage += msg.user.strenght;
    }
    else if(msg.user.vip === '–î–µ–π—Å—Ç–≤—É–µ—Ç') {
        msg.user.boss_damage += msg.user.strenght * 2
    }
    if(msg.user.strenght > boss[0].hp) {
        damage = boss[0].hp
    }
    else {
        damage = msg.user.strenght
    }

    if(msg.user.vip === false) {
        if(msg.user.weapon !== null) damage += damage * item.bonus
    }
    else if(msg.user.vip === '–î–µ–π—Å—Ç–≤—É–µ—Ç') {
        damage += damage
        if(msg.user.weapon !== null) damage += damage * item.bonus
    }
    

    boss[0].hp -= Math.round(damage);

    money = damage
    msg.user.money += Math.round(money)

    if(msg.user.vip === false) {
        bot(`–í—ã –Ω–∞–Ω–µ—Å–ª–∏ –±–æ—Å—Å—É ${Math.round(damage)} —É—Ä–æ–Ω–∞ –∏ –ø–æ–ª—É—á–∏–ª–∏ ${utils.sp(Math.round(money))}¬•. –î–æ —Å–ª–µ–¥—É—é—â–µ–π –∞—Ç–∞–∫–∏ –±–æ—Å—Å–∞ - 30 –º–∏–Ω—É—Ç.`);
    }

    else if(msg.user.vip === '–î–µ–π—Å—Ç–≤—É–µ—Ç') {
        bot(`–í—ã –Ω–∞–Ω–µ—Å–ª–∏ –±–æ—Å—Å—É ${Math.round(damage)} —É—Ä–æ–Ω–∞ –∏ –ø–æ–ª—É—á–∏–ª–∏ ${utils.sp(Math.round(money))}¬•. –î–æ —Å–ª–µ–¥—É—é—â–µ–π –∞—Ç–∞–∫–∏ –±–æ—Å—Å–∞ - 20 –º–∏–Ω—É—Ç.`);
    }

    if(boss[0].hp <= 0) {
        for(let i = 0; i in users; i++) {
            if(users[i].boss_damage > 0) {
                users[i].money += users[i].boss_damage
                vk.api.messages.send({
                    peer_id: users[i].id,
                    user_id: users[i].id,
                    message: `–ë–æ—Å—Å ${boss[0].name}, –≤ –±–∏—Ç–≤–µ —Å –∫–æ—Ç–æ—Ä—ã–º –≤—ã –ø—Ä–∏–Ω–∏–º–∞–ª–∏ —É—á–∞—Å—Ç–∏–µ, –±—ã–ª –ø–æ–±–µ–∂–¥—ë–Ω –∏ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ ${utils.sp(users[i].boss_damage)}¬•!`,
                    random_id: 0
                })
                users[i].boss_damage = 0
                boss[0].hp = 10000000000;
            }
        }
    }

    return msg.user.timers.boss = getUnix() + 1800000;

})

cmd.hear(/^(?:–±–æ—Å—Å –∏–Ω—Ñ–æ)$/i, async (msg, bot) => {
    return bot(`–ò–º—è –±–æ—Å—Å–∞: ${boss[0].name}\n–•–ü –±–æ—Å—Å–∞: ${utils.sp(boss[0].hp)}`)
})

cmd.hear(/^(?:–Ω–∏–∫)\s(.*)$/i, async (msg, bot) => {
    let nick = msg.args[1]

    let test = users.find(x => x.nickname.toLowerCase() === msg.args[1].toLowerCase())

    if(test) return bot(`–î–∞–Ω–Ω—ã–π –Ω–∏–∫ —É–∂–µ –∑–∞–Ω—è—Ç!`)

    if(nick.length >= 30) return bot(`–ù–∏–∫ –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å –º–µ–Ω—å—à–µ —á–µ–º –∏–∑ 30 —Å–∏–º–≤–æ–ª–æ–≤!`)

    bot(`–í—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–∏–∫ "${nick}".\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?`, {
        keyboard: Keyboard.keyboard([
            [
                Keyboard.callbackButton({
                        label: "–î–∞",
                        payload: {
                                command: 'setNick',
                                nick: `${nick}`
                            },
                            color: Keyboard.POSITIVE_COLOR
                    })
            ]
        ]).inline()
    })
})

function unixStampLeft(stamp) {
	stamp = stamp / 1000;

	let s = stamp % 60;
	stamp = ( stamp - s ) / 60;

	let m = stamp % 60;
	stamp = ( stamp - m ) / 60;

	let	h = ( stamp ) % 24;
	let	d = ( stamp - h ) / 24;

	let text = ``;

	if(d > 0) text += Math.floor(d) + " –¥. ";
	if(h > 0) text += Math.floor(h) + " —á. ";
	if(m > 0) text += Math.floor(m) + " –º–∏–Ω. ";
	if(s > 0) text += Math.floor(s) + " —Å.";

	return text;
}

cmd.hear(/^(?:–∫–ª–∞–Ω —Å–æ–∑–¥–∞—Ç—å)\s(.*)$/i, async (msg, bot) => {
    if(msg.user.clan !== null) return bot(`–í—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞–Ω–µ!`)
    let name = `${msg.args[1]}`

    let test = clans.find(x => x.name.toLowerCase() === msg.args[1].toLowerCase())

    if(test) return bot(`–ö–ª–∞–Ω —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!`)

    clans.push({
        cid: clans.length,
        name: `${name}`,
        owner: msg.user.uid,
        members: [
            msg.user.uid
        ],
        description: null,
        hello: null,
        chat: '',
        icon: null,
        link: null,
        boss: {
        	name: null,
        	hp: null,
            maxHp: null,
        	icon: ''
        },
        reputation: 0,
        delete: false
    })

    let clan = clans.find(x => x.name === name)

    let link = await vk.api.utils.getShortLink({
        url: `https://vk.me/demon_slayerbot?ref=${btoa(`${clan.cid}cid`)}`
    })

    clan.link = link

    msg.user.clan = clan.cid

    return bot(`–ö–ª–∞–Ω ${clan.name} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!`)
})

cmd.hear(/^(?:–∫–ª–∞–Ω –≤—Å—Ç—É–ø–∏—Ç—å)\s([0-9]+)$/i, async (msg, bot) => {
    if(msg.user.clan !== null) return bot(`–í—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞–Ω–µ!`)

    let clan = clans.find(x => x.cid === Number(msg.args[1]))

    if(!clan) return bot(`–ö–ª–∞–Ω —Å —Ç–∞–∫–∏–º –∞–π–¥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω!`)

    clan.members.push(msg.user.uid)

    msg.user.clan = clan.cid

    return bot(`–í—ã —É—Å–ø–µ—à–Ω–æ –≤—Å—Ç—É–ø–∏–ª–∏ –≤ –∫–ª–∞–Ω ${clan.name}`)
})

cmd.hear(/^(?:–∫–ª–∞–Ω –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å)\s(.*)$/i, async (msg, bot) => {
    let user = msg.args[1]
    let user_id;

    if(msg.user.clan === null) return bot(`–í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞–Ω–µ!`)

    let clan = clans.find(x => x.cid === msg.user.clan)

    if(user.indexOf('@') != -1) {
        user = user.replace(/\[id(.*)\|/ig, '')
        user = user.replace(']', '')
        user_id = user.replace('@', '')
        user = await vk.api.users.get({
            user_ids: user_id
        })
        user = user[0].id
    }
    else if(user.indexOf('https://vk.com/') != -1 || user.indexOf('https://m.vk.com/') != -1) {
        if(user.indexOf('https://vk.com/') != -1) {
            user_id = user.replace('https://vk.com/', '')  
        }
        else {
            user_id = user.replace('https://m.vk.com/', '')
        }
        
        user = await vk.api.users.get({
            user_ids: user_id
        })
        user = user[0].id
    }

    let user_bot = users.find(x => x.id === user)

    if(!user_bot) return bot(`–î–∞–Ω–Ω—ã–π –∏–≥—Ä–æ–∫ –µ—â—ë –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ –±–æ—Ç–µ!`)

    if(user_bot.clan !== null) return bot(`–ò–≥—Ä–æ–∫ [id${user_bot.id}|${user_bot.nickname}] —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –∫–ª–∞–Ω–µ!`, {
        disable_mentions: 1
    })
    
    vk.api.messages.send({
        peer_id: user,
        user_id: user,
        message: `–ò–≥—Ä–æ–∫ [id${msg.user.id}|${msg.user.nickname}] –ø—Ä–∏–≥–ª–∞—Å–∏–ª –≤–∞—Å –≤ –∫–ª–∞–Ω ${clan.name}. –í—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è?`,
        random_id: 0,
        keyboard: Keyboard.keyboard([
            [
                Keyboard.callbackButton({
                    label: "–î–∞",
                    payload: {
                        command: `confirmInvite`,
                        clan: clan.cid,
                    },
                    color: Keyboard.POSITIVE_COLOR
                }),
        
                Keyboard.callbackButton({
                    label: "–ù–µ—Ç",
                    payload: {
                        command: `denyInvite`,
                        clan: clan.cid
                    },
                    color: Keyboard.NEGATIVE_COLOR
                })
            ]
        ]).inline(),
        attachment: clan.icon
    })
    return bot(`–ó–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –∫–ª–∞–Ω ${clan.name} –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∏–≥—Ä–æ–∫—É [id${user}|${user_bot.nickname}]`, {
        disable_mentions: 1
    })
})

cmd.hear(/^(?:–∫–ª–∞–Ω –ø–æ–∫–∏–Ω—É—Ç—å)$/i, async (msg, bot) => {
    if(msg.user.clan === null) return bot(`–í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞–Ω–µ!`)
    let clan = clans.find(x => x.cid === msg.user.clan)
    if(clan.owner === msg.user.uid) return bot(`–í—ã —Å–æ–∑–¥–∞—Ç–µ–ª—å –∫–ª–∞–Ω–∞ –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –µ–≥–æ –ø–æ–∫–∏–Ω—É—Ç—å!`)
    msg.user.clan = null
    const index = clan.members.indexOf(msg.user.uid)
    clan.members.splice(index, 1)

    return bot(`–£—Å–ø–µ—à–Ω–æ!`)
})

cmd.hear(/^(?:—Ç–µ—Å—Ç2)\s(.*)/i, async (msg, bot) => {
    let text = msg.text.replace(`\n`, ' ')
    text = text.replace(/^(?:—Ç–µ—Å—Ç2)/i, '')
    return bot(text)
})

cmd.hear(/^(?:—Ç–µ—Å—Ç3)/i, async (msg, bot) => {
    let clan = clans.find(x => x.cid === msg.user.clan)
    return bot('', {
        attachment: `photo${clan.icon.ownerId}_${clan.icon.id}_${clan.icon.accessKey}`
    })
})

cmd.hear(/^(?:–∫–ª–∞–Ω)$/i, async (msg, bot) => {
    if(msg.user.clan === null) return bot(`–í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞–Ω–µ!`) 
    let clan = clans.find(x => x.cid === msg.user.clan)
    let owner = users.find(x => x.uid === clan.owner)
    let clan_keyboard1 = Keyboard.keyboard([
        [
            Keyboard.callbackButton({
                label: "–£—á–∞—Å—Ç–Ω–∏–∫–∏",
                payload: {
                    command: `members`,
                    clan: clan.cid
                },
                color: Keyboard.POSITIVE_COLOR
            }),
    
            Keyboard.callbackButton({
                label: "–ë–æ—Å—Å",
                payload: {
                    command: `showClanBoss`,
                    clan: clan.cid
                },
                color: Keyboard.NEGATIVE_COLOR
            })
        ]
    ]).inline()

    let clan_keyboard2 = Keyboard.keyboard([
        [
            Keyboard.callbackButton({
                label: "–£—á–∞—Å—Ç–Ω–∏–∫–∏",
                payload: {
                    command: `members`,
                    clan: clan.cid
                },
                color: Keyboard.POSITIVE_COLOR
            }),
    
            Keyboard.callbackButton({
                label: "–ë–æ—Å—Å",
                payload: {
                    command: `showClanBoss`,
                    clan: clan.cid
                },
                color: Keyboard.NEGATIVE_COLOR
            })
        ],
        [
            Keyboard.callbackButton({
                label: "‚öôÔ∏è–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ",
                payload: {
                    command: `clanSettings`,
                    clan: clan.cid
                },
                color: Keyboard.PRIMARY_COLOR
            })
        ]
    ]).inline()

    if(msg.user.uid === clan.owner) {
        return bot(`–ù–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–Ω–∞: ${clan.name}\n\n–ì–ª–∞–≤–∞ –∫–ª–∞–Ω–∞: [id${owner.id}|${owner.nickname}]\n–ö–æ–ª-–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: ${clan.members.length}\n–†–µ–ø—É—Ç–∞—Ü–∏—è: ${utils.sp(clan.reputation)}\n–°—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è: ${clan.link.short_url}`, {
            keyboard: clan_keyboard2,
            attachment: clan.icon
        })
    }
    else {
        return bot(`–ù–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–Ω–∞: ${clan.name}\n\n–ì–ª–∞–≤–∞ –∫–ª–∞–Ω–∞: [id${owner.id}|${owner.nickname}]\n–ö–æ–ª-–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: ${clan.members.length}\n–†–µ–ø—É—Ç–∞—Ü–∏—è: ${utils.sp(clan.reputation)}\n–°—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è: ${clan.link.short_url}`, {
            keyboard: clan_keyboard1,
            attachment: clan.icon
        })
    }
})

cmd.hear(/^(?:–∫–ª–∞–Ω –∞–≤–∞)$/i, async (msg, bot) => {
    let clan = clans.find(x => x.cid === msg.user.clan)

    if(msg.user.clan === null) return bot(`–í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞–Ω–µ!`)

    if(clan.owner !== msg.user.uid) return bot(`–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤!`)

    if(msg.attachments.length === 0) return bot(`–í—ã –¥–æ–ª–∂–Ω—ã –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –≤–ª–æ–∂–µ–Ω–∏–µ!`)

    if(msg.attachments.length > 1) return bot(`–í—ã –¥–æ–ª–∂–Ω—ã –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –æ–¥–Ω–æ –≤–ª–æ–∂–µ–Ω–∏–µ!`)

    clan.icon = msg.attachments[0]

    clan.icon = `photo${clan.icon.ownerId}_${clan.icon.id}_${clan.icon.accessKey}`

    return bot(`–ê–≤–∞ –∫–ª–∞–Ω–∞ ${clan.name} —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!`, {
        attachment: clan.icon
    })
})

cmd.hear(/^(?:–∫–±–æ—Å—Å —Å–æ–∑–¥–∞—Ç—å)\s([0-9–ê-–Ø]+)\s(.*)$/i, async (msg, bot) => {
    msg.args[1] = utils.repl(msg.args[1])
    if(msg.user.clan === null) return bot(`–í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞–Ω–µ!`)
    let clan = clans.find(x => x.cid === msg.user.clan)
    if(clan.owner !== msg.user.uid) return bot(`–í—ã –Ω–µ –≥–ª–∞–≤–∞ –∫–ª–∞–Ω–∞!`)

    if(clan.boss.name !== null) return bot(`–£ –∫–ª–∞–Ω–∞ ${clan.name} —É–∂–µ –µ—Å—Ç—å –±–æ—Å—Å!`)

    if(msg.attachments.length === 0) return bot(`–í—ã –¥–æ–ª–∂–Ω—ã –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –≤–ª–æ–∂–µ–Ω–∏–µ!`)

    if(msg.attachments.length > 1) return bot(`–í—ã –¥–æ–ª–∂–Ω—ã –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –æ–¥–Ω–æ –≤–ª–æ–∂–µ–Ω–∏–µ!`)
    
    if(Number(msg.args[1]) < 10000000) return bot(`–•–ø –±–æ—Å—Å–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –º–µ–Ω—å—à–µ 10 –º–∏–ª–ª–∏–æ–Ω–æ–≤!`)
    
    let attachment = `photo${msg.attachments[0].ownerId}_${msg.attachments[0].id}_${msg.attachments[0].accessKey}`
    
    
    
    return bot(`–ö–ª–∞–Ω–æ–≤—ã–π –±–æ—Å—Å –∫–ª–∞–Ω–∞ ${clan.name}:\n\n–ò–º—è: ${msg.args[2]}\n–•–ü: ${utils.sp(msg.args[1])}\n\n–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–Ω–æ–≤–æ–≥–æ –±–æ—Å—Å–∞?`, {
    	    attachment: attachment,
    	    keyboard: Keyboard.keyboard([
    	    	    [
    	    	        Keyboard.callbackButton({
    	    	        	    label: "–î–∞",
    	    	        	    payload: {
    	    	        	    	    command: 'createClanBoss',
    	    	        	    	    clan: clan.cid,
    	    	        	    	    boss: {
    	    	        	    	    	    name: `${msg.args[2]}`,
    	    	        	    	    	    hp: Number(msg.args[1]),
    	    	        	    	    	    icon: attachment
    	    	        	    	    	},
    	    	        	    	    	user: msg.user.uid
    	    	        	    	},
    	    	        	    	color: Keyboard.POSITIVE_COLOR
    	    	        	})
    	    	    ]
    	    	]).inline()
    	})
})

cmd.hear(/^(?:–∫–±–æ—Å—Å|–∫–±–æ—Å—Å –∞—Ç–∞–∫–∞)$/i, async (msg, bot) => {
    let clan = clans.find(x => x.cid === msg.user.clan)
    let item = shop.find(x => x.name === msg.user.weapon)
    if(!clan) return bot(`–í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞–Ω–µ!`)
    if(clan.boss.name === null) return bot(`–í –∫–ª–∞–Ω–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–ª–∞–Ω–æ–≤—ã–π –±–æ—Å—Å!`)
    if(msg.user.timers.cboss > getUnix()) return bot(`–î–ª—è —Å–ª–µ–¥—É—é—â–µ–π –∞—Ç–∞–∫–∏ –ø–æ–¥–æ–∂–¥–∏—Ç–µ ${unixStampLeft(msg.user.timers.cboss - Date.now())}`
    )

    let damage;
    if(msg.user.vip === false) {
        damage = msg.user.strenght
        if(msg.user.weapon !== null) damage += damage * item.bonus
    
        clan.boss.hp -= Math.round(damage)
    
    
        msg.user.exp += 5
        clan.reputation += 1
    }

    else if(msg.user.vip === '–î–µ–π—Å—Ç–≤—É–µ—Ç') {
        damage = msg.user.strenght * 2
        if(msg.user.weapon !== null) damage += damage * item.bonus 
    
        clan.boss.hp -= Math.round(damage)
    
    
        msg.user.exp += 10
        clan.reputation += 2
    }

    if(msg.user.exp >= msg.user.nextExp) {
        msg.user.lvl += 1;
        msg.user.exp = 0;
        msg.user.nextExp += 25
    }
    if(clan.boss.hp <= 0) {
        let user;
        for(let i = 0; i in clan.members; i++) {
            user = users.find(x => x.uid === clan.members[i])

            vk.api.messages.send({
                "peer_id": user.id,
                "user_id": user.id,
                "random_id": 0,
                "attachment": clan.boss.icon,
                "message": `–ö–ª–∞–Ω–æ–≤—ã–π –±–æ—Å—Å ${clan.boss.name} –±—ã–ª  —É–±–∏—Ç! –ö–ª–∞–Ω ${clan.name} –∑–∞—Ä–∞–±–æ—Ç–∞–ª ${utils.sp(Math.round(clan.boss.maxHp / 2000000))} —Ä–µ–ø—É—Ç–∞—Ü–∏–∏!`
            })
        }

        clan.reputation += Math.round(clan.boss.maxHp / 2000000)
        clan.boss.name = null
        clan.boss.icon = ""
        clan.boss.hp = null
        clan.boss.maxHp = null
    }

    getUnix() + 1800000

    if(clan.boss.name === null) return msg.user.timers.cboss = getUnix() + 1800000;

    if(msg.user.vip === false) {
        bot(`–í—ã —É—Å–ø–µ—à–Ω–æ –∞—Ç–∞–∫–æ–≤–∞–ª–∏ –∫–ª–∞–Ω–æ–≤–æ–≥–æ –±–æ—Å—Å–∞ ${clan.boss.name} –∏ –Ω–∞–Ω–µ—Å–ª–∏ –µ–º—É ${utils.sp(Math.round(damage))} —É—Ä–æ–Ω–∞. –í—ã –ø–æ–ª—É—á–∏–ª–∏ 5 –æ–ø—ã—Ç–∞. –ö–ª–∞–Ω –ø–æ–ª—É—á–∏–ª 1 —Ä–µ–ø—É—Ç–∞—Ü–∏—é.`, {
            attachment: clan.boss.icon
        })
        return msg.user.timers.cboss = getUnix() + 1800000;
    }

    else if(msg.user.vip === '–î–µ–π—Å—Ç–≤—É–µ—Ç') {
        bot(`–í—ã —É—Å–ø–µ—à–Ω–æ –∞—Ç–∞–∫–æ–≤–∞–ª–∏ –∫–ª–∞–Ω–æ–≤–æ–≥–æ –±–æ—Å—Å–∞ ${clan.boss.name} –∏ –Ω–∞–Ω–µ—Å–ª–∏ –µ–º—É ${utils.sp(Math.round(damage))} —É—Ä–æ–Ω–∞. –í—ã –ø–æ–ª—É—á–∏–ª–∏ 10 –æ–ø—ã—Ç–∞. –ö–ª–∞–Ω –ø–æ–ª—É—á–∏–ª 2 —Ä–µ–ø—É—Ç–∞—Ü–∏—é.`, {
            attachment: clan.boss.icon
        })
        return msg.user.timers.cboss = getUnix() + 1200000;
    }

})

cmd.hear(/^(?:–∫–±–æ—Å—Å –∏–Ω—Ñ–æ)$/i, async (msg, bot) => {
    let clan = clans.find(x => x.cid === msg.user.clan)
    if(!clan) return bot(`–í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞–Ω–µ!`)
    let boss = clan.boss
    if(clan.boss.name === null) return bot(`–í –∫–ª–∞–Ω–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–ª–∞–Ω–æ–≤—ã–π –±–æ—Å—Å!`)
    return bot(`–ö–ª–∞–Ω–æ–≤—ã–π –±–æ—Å—Å –∫–ª–∞–Ω–∞ ${clan.name}:\n\n–ò–º—è: ${boss.name}\n–•–ü: ${utils.sp(boss.hp)}`, {
        attachment: boss.icon
    })
})

cmd.hear(/^(?:–∫–ª–∞–Ω –ø–æ–º–æ—â—å)$/i, async (msg, bot) => {
    return bot(`–ö–ª–∞–Ω - –∏–Ω—Ñ–æ –æ —Ç–≤–æ—ë–º –∫–ª–∞–Ω–µ\n–ö–ª–∞–Ω —Å–æ–∑–¥–∞—Ç—å (–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–Ω–∞) - –Ω—É —Ç—É—Ç –≤—Å—ë –ø–æ–Ω—è—Ç–Ω–æ\n–ö–ª–∞–Ω –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å (—Å—Å—ã–ª–∫–∞ –Ω–∞ –∏–≥—Ä–æ–∫–∞, –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ @) - —Ç–æ–∂–µ –≤—Å—ë –ø–æ–Ω—è—Ç–Ω–æ\n–ö–ª–∞–Ω –∞–≤–∞ (–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –≤–ª–æ–∂–µ–Ω–∏–µ) - —Ö–∑ –∑–∞—á–µ–º —ç—Ç–æ :D\n–ö–±–æ—Å—Å —Å–æ–∑–¥–∞—Ç—å (–∫–æ–ª-–≤–æ —Ö–ø –æ—Ç 10–º–ª–Ω) (–∏–º—è –±–æ—Å—Å–∞) - —Å–∞–º–∏ —Ä–∞–∑–±–µ—Ä—ë—Ç–µ—Å—å, –º–Ω–µ –ª–µ–Ω—å\n–ö–±–æ—Å—Å –∞—Ç–∞–∫–∞ - –¥–∞...\n–ö–±–æ—Å—Å –∏–Ω—Ñ–æ - —è –Ω–µ –±—É–¥—É –≤–∞–º –±–æ–ª—å—à–µ –Ω–∏—á–µ–≥–æ –æ–±—ä—è—Å–Ω—è—Ç—å`)
})

cmd.hear(/^(?:–∫–ª–∞–Ω —Ä–∞—Å–ø—É—Å—Ç–∏—Ç—å)$/i, async (msg, bot) => {
    if(msg.user.clan === null) return bot(`–í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞–Ω–µ!`)
    let clan = clans.find(x => x.cid === msg.user.clan)
    if(clan.owner !== msg.user.uid) return bot(`–í—ã –Ω–µ –≥–ª–∞–≤–∞ –∫–ª–∞–Ω–∞!`)
    bot(`–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ–¥–∏—Ç–µ —Ä–∞—Å–ø—É—Å—Ç–∏—Ç—å –∫–ª–∞–Ω ${clan.name}?`, {
        keyboard: Keyboard.keyboard([
            [
                Keyboard.callbackButton({
                        label: "–î–∞",
                        payload: {
                                command: 'destroyClan',
                                clan: clan.cid,
                                user: msg.user.id
                            },
                            color: Keyboard.POSITIVE_COLOR
                    })
            ]
        ]).inline()
    })
})

cmd.hear(/^(?:—Ç–æ–ø)$/i, async (msg, bot) => {
    return bot(`–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–ø:`, {
        keyboard: Keyboard.keyboard([
            [
                Keyboard.callbackButton({
                    label: "–¢–æ–ø –ø–æ –≤–ª–∞–¥–µ–Ω–∏—é",
                    payload: {
                        command: 'topStrenght'
                    },
                    color: Keyboard.NEGATIVE_COLOR
                })
            ],
            [
                Keyboard.callbackButton({
                    label: "–¢–æ–ø –ø–æ –π–µ–Ω–∞–º",
                    payload: {
                        command: 'topMoney'
                    },
                    color: Keyboard.POSITIVE_COLOR
                }),
                Keyboard.callbackButton({
                    label: "–¢–æ–ø –ø–æ —É—Ä–æ–≤–Ω—é",
                    payload: {
                        command: 'topLvl'
                    },
                    color: Keyboard.POSITIVE_COLOR
                })
            ],
            [
                Keyboard.callbackButton({
                    label: "–¢–æ–ø –∫–ª–∞–Ω–æ–≤",
                    payload: {
                        command: 'topClans'
                    },
                    color: Keyboard.SECONDARY_COLOR
                })
            ]
        ]).inline()
    })
})

cmd.hear(/^(?:–º–∞–≥–∞–∑|–º–∞–≥–∞–∑–∏–Ω)$/i, async (msg, bot) => {
    let page = 1
    let item = shop.find(x => x.page === page)
    return bot(`${item.name}\n\n–°—Ç–æ–∏–º–æ—Å—Ç—å: ${utils.sp(item.cost)}¬•\n–±–æ–Ω—É—Å: ${item.bonus * 100}%`, {
        keyboard: Keyboard.keyboard([
            [
                Keyboard.callbackButton({
                    label: "&#10145;",
                    payload: {
                        command: "shopForward",
                        page: page
                    },
                    color: Keyboard.PRIMARY_COLOR
                }),
                Keyboard.callbackButton({
                    label: "–ö—É–ø–∏—Ç—å",
                    payload: {
                        command: "buyNichirin",
                        item: item,
                        user: msg.senderId
                    },
                    color: Keyboard.POSITIVE_COLOR
                })
            ]
        ]).inline(),
        attachment: item.attachment
    })
})

function getUnix() {
    return Date.now();
}

cmd.hear(/^(?:setvip|\+vip)\s([0-9]+)$/i, async (msg, bot) => {
    if(msg.user.id !== 657796581 && msg.user.id !== 675195902 && msg.user.id !== 361263304 && msg.Ischat) return bot(`–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã. –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã, –ø–∏—à–∏—Ç–µ "–ø–æ–º–æ—â—å".`)
    else if(msg.user.id !== 657796581 && msg.user.id !== 361263304 && msg.Ischat) return;

    let user = users.find(x => x.uid === Number(msg.args[1]))
    if(!user) return bot(`–î–∞–Ω–Ω—ã–π –∏–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!`)

    user.vip = '–î–µ–π—Å—Ç–≤—É–µ—Ç'
    return bot(`–í—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞–∑–Ω–∞—á–∏–ª–∏ [id${user.id}|${user.nickname}] –≤–∏–ø –ø—Ä–∏–≤–µ–ª–µ–≥–∏—é!`, {
        disable_mentions: 1
    })
})

cmd.hear(/^(?:unvip|-vip)\s([0-9]+)$/i, async (msg, bot) => {
    if(msg.user.id !== 657796581 && msg.user.id !== 675195902 && msg.user.id !== 361263304 && msg.Ischat) return bot(`–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã. –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã, –ø–∏—à–∏—Ç–µ "–ø–æ–º–æ—â—å".`);
    else if(msg.user.id !== 657796581 && msg.user.id !== 361263304 && msg.Ischat) return;

    let user = users.find(x => x.uid === Number(msg.args[1]))
    if(!user) return bot(`–î–∞–Ω–Ω—ã–π –∏–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!`)

    user.vip = false
    return bot(`–í—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ [id${user.id}|${user.nickname}] –≤–∏–ø –ø—Ä–∏–≤–∏–ª–µ–≥–∏—é!`, {
        disable_mentions: 1
    })
})